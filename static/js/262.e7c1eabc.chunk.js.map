{"version":3,"file":"static/js/262.e7c1eabc.chunk.js","mappings":"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","sources":["components/ChatsSide/ChatsSide.typings.ts","components/HamburgerMenuIcon/HamburgerMenuIcon.styles.ts","components/HamburgerMenuIcon/HamburgerMenuIcon.tsx","hooks/useMatchMedia.ts","components/ChatsSide/ChatsSide.hook/useDialogs.ts","components/ChatsSide/ChatsSide.constants.ts","api/usersServer.ts","components/UserAvatar/UserAvatar.styles.ts","assets/imgs/back-icon.svg","components/UserAvatar/UserAvatar.tsx","utils/formatDate.ts","shared/Dialog/Dialog.styles.ts","shared/Dialog/Dialog.tsx","components/ChatsSide/Dialogs/Dialogs.tsx","shared/Info/Info.styles.ts","shared/Info/Info.tsx","components/ChatsSide/GlobalSearchResult/GlobalSearchResult.tsx","components/ChatsSide/UserDialogs/UserDialogs.tsx","components/ChatsSide/DialogList/DialogList.tsx","components/ChatsSide/ChatsSide.utils/getDialogsType.ts","hooks/usePhoneDialogBehavior.ts","components/ChatsSide/ChatsSide.styles.ts","components/ChatsSide/ChatsSide.tsx","components/MessagesSide/MessagesSide.utils/isLastMessageByUser.ts","components/MessagesSide/MessagesSide.utils/isShowUnreadTooltip.ts","beautifyPhone.ts","components/PartnerInfo/PartnerInfo.styles.ts","components/PartnerInfo/helpers.ts","components/PartnerInfo/PartnerInfo.tsx","socket.ts","hooks/useSocket.ts","components/MessagesSide/MessageInput/MessageInput.styles.ts","components/MessagesSide/MessageInput/MessageInput.tsx","shared/Message/Message.styles.ts","shared/Message/DateTooltip/DateTooltip.styles.ts","shared/Message/DateTooltip/DateTooltip.tsx","shared/Message/UnreadTooltip/UnreadTooltip.styles.ts","shared/Message/UnreadTooltip/UnreadTooltip.tsx","shared/Message/Message.tsx","shared/Loader/Loader.styles.ts","shared/Loader/Loader.tsx","components/MessagesSide/Messages/Messages.styles.ts","components/MessagesSide/Messages/Messages.tsx","components/MessagesSide/MessagesSide.utils/isElementScrollToBottom.ts","components/MessagesSide/MessagesSide.utils/isNewDay.ts","components/MessagesSide/MessagesSide.styles.ts","components/MessagesSide/MessagesSide.tsx","utils/getFullName.ts","helpComponents/User/User.styles.ts","helpComponents/User/User.tsx","helpers/popupOpen.ts","components/ModeSwitcher/ModeSwitcher.styles.ts","components/ModeSwitcher/ModeSwitcher.tsx","shared/IconImage/IconImage.tsx","components/Settings/Settings.styles.ts","components/Settings/Settings.tsx","components/Settings/helpers.ts","components/BioInput/BioInput.styles.ts","components/BioInput/BioInput.tsx","hooks/useBeautifyUserInfo.ts","components/ExtraSettings/ExtraSettings.styles.ts","components/ExtraSettings/InfoSettings/InfoSettings.styles.ts","components/ExtraSettings/InfoSettings/InfoSettings.tsx","Styled-components/PopupItemContainer.ts","helpComponents/SettingsTitle/SettingsTitle.tsx","components/ThemeItem/ThemeItem.styles.ts","components/ThemeItem/ThemeItem.tsx","helpComponents/RadioButton/RadioButton.tsx","components/ThemeSettings/ThemeSettings.tsx","helpers/paths.ts","helpComponents/ThemedText/ThemedText.tsx","components/BackgroundSettings/BackgroundSettings.styles.ts","components/BackgroundSettings/BackgroundSettings.tsx","components/MessagesSettings/MessagesSettings.styles.ts","components/MessagesSettings/MessagesSettings.tsx","components/ExtraSettings/ChatSettings/ChatSettings.tsx","components/ExtraSettings/helpers/copyNickname.ts","helpers/clipboard.ts","hooks/usePopup.ts","helpComponents/HideByCondition/HideByCondition.tsx","components/ExtraSettings/ExtraSettings.tsx","helpComponents/Tooltip/Tooltip.tsx","components/NamePopup/NamePopup.styles.ts","components/NamePopup/NamePopup.tsx","components/NicknamePopup/helpers.ts","components/NicknamePopup/NicknamePopup.styles.ts","components/NicknamePopup/NicknamePopup.tsx","components/BackgroundPreviewPopup/BackgroundPreviewPopup.styles.ts","components/BackgroundPreviewPopup/BackgroundPreviewPopup.tsx","components/BackgroundPopup/BackgroundPopup@common.styles.ts","components/BackgroundPopup/BackgroundPopup@common.tsx","pages/MainPage/MainPage.styles.ts","pages/MainPage/MainPage.tsx","assets/imgs/side-menu|lazy|/^/.*/.png$/|groupOptions: {}|namespace object"],"sourcesContent":["export enum RenderComponent {\r\n  LOADING,\r\n  SEARCH_DIALOGS,\r\n  USER_DIALOGS\r\n}","import styled from 'styled-components';\r\n\r\n\r\nexport const HamburgerContainerIconStyled = styled.div`\r\n  position: relative;\r\n  width: 25px;\r\n  height: 17px;\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n  &:hover span{\r\n    background-color: ${props => props.theme.colors.hamburgerHover};\r\n  }\r\n  span {\r\n    position: absolute;\r\n    display: inline-block;\r\n    height: 4px;\r\n    width: 100%;\r\n    border-radius: 2px;\r\n    background-color: ${props => props.theme.colors.hamburger};\r\n    &:nth-child(2) {\r\n      top: 6px;\r\n    }\r\n    &:nth-child(3) {\r\n      top: 13px;\r\n    }\r\n  }\r\n`;","import React from 'react';\r\nimport { useAppDispatch } from '@hooks/useAppSelector';\r\nimport { switchSettings } from '@reducers/settingsSlice/settingsSlice';\r\n\r\nimport { HamburgerContainerIconStyled } from './HamburgerMenuIcon.styles';\r\n\r\n\r\nconst HamburgerMenuIcon: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onOpenSettings = () => {\r\n    dispatch(switchSettings(true));\r\n  };\r\n\r\n  return (\r\n    <HamburgerContainerIconStyled onClick={onOpenSettings}>\r\n      <span/>\r\n      <span/>\r\n      <span/>\r\n    </HamburgerContainerIconStyled>\r\n  );\r\n};\r\n\r\nexport default HamburgerMenuIcon;\r\n","import { useLayoutEffect, useState } from 'react';\r\n\r\nconst useMatchMedia = () => {\r\n  const phoneMedia = matchMedia('(max-width: 1000px)');\r\n\r\n  const [isPhone, setIsPhone] = useState(phoneMedia.matches);\r\n\r\n  useLayoutEffect(() => {\r\n    const handler = () => setIsPhone(phoneMedia.matches);\r\n\r\n    phoneMedia.addEventListener('change', handler);\r\n\r\n    return () => phoneMedia.removeEventListener('change', handler);\r\n\r\n  });\r\n\r\n  return isPhone;\r\n};\r\n\r\nexport default useMatchMedia;","import { useEffect, useState } from 'react';\r\nimport useInput from '@hooks/useInput';\r\nimport { useDebounce } from 'use-debounce';\r\nimport { DEBOUNCE_SEARCH_TIME } from '@components/ChatsSide/ChatsSide.constants';\r\nimport { useAppDispatch, useAppSelector } from '@hooks/useAppSelector';\r\nimport { setFoundedGlobalUsers } from '@reducers/dialogSlice/dialogSlice';\r\n\r\nimport { searchUsers } from '../../../api/usersServer';\r\n\r\nexport const useDialogs = () => {\r\n  const userPhone = useAppSelector(state => state.user.phoneNumber);\r\n  const activeDialogPhone = useAppSelector(state => state.dialog.activeDialog?.phoneNumber);\r\n  const [searchValue, setSearchValue] = useInput();\r\n  const [debouncedValue] = useDebounce(searchValue, DEBOUNCE_SEARCH_TIME);\r\n  const [searchDialogs, setSearchDialogs] = useState(false);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    setSearchDialogs(false);\r\n    setLoading(!!searchValue);\r\n\r\n  }, [searchValue]);\r\n\r\n  useEffect(() => {\r\n    setSearchValue('');\r\n  }, [activeDialogPhone]);\r\n\r\n  useEffect(() => {\r\n    if (debouncedValue && userPhone) {\r\n      setLoading(true);\r\n      searchUsers(debouncedValue, userPhone)\r\n        .then(data => {\r\n          setSearchDialogs(true);\r\n          setLoading(false);\r\n          dispatch(setFoundedGlobalUsers(data));\r\n        });\r\n\r\n    }\r\n  }, [debouncedValue]);\r\n\r\n  return {\r\n    searchDialogs,\r\n    isLoading,\r\n    searchValue,\r\n    setSearchValue\r\n  };\r\n};\r\n","export const DEBOUNCE_SEARCH_TIME = 500;","import { BASE_URL } from '../types';\r\nimport { IGlobalSearchResults } from '../global.typings';\r\n\r\nexport const searchUsers = (searchValue: string, userPhone: string): Promise<IGlobalSearchResults> => {\r\n  return fetch(`${BASE_URL}/users?value=${searchValue}&userPhone=${userPhone}`)\r\n    .then(response => response.json());\r\n};\r\n\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const UserAvatarContainer = styled.span<{color: string}>`\r\n  height: 50px;\r\n  width: 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 50%;\r\n  background-color: ${props => props.color};\r\n  color: #fff;\r\n`;","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBackIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    shapeRendering: \"geometricPrecision\",\n    textRendering: \"geometricPrecision\",\n    imageRendering: \"optimizeQuality\",\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    viewBox: \"0 0 312 511.42\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"nonzero\",\n    d: \"M35.54 0 312 252.82 29.84 511.42 0 478.8l246.54-225.94L5.7 32.62z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBackIcon);\nexport default __webpack_public_path__ + \"static/media/back-icon.2c1c2c7033a89a74f3302f90535dd846.svg\";\nexport { ForwardRef as ReactComponent };","import React, { CSSProperties } from 'react';\r\n\r\nimport { UserAvatarContainer } from './UserAvatar.styles';\r\n\r\ninterface IUserAvatarProps {\r\n    image: string | null,\r\n    text: string\r\n    style?: CSSProperties,\r\n    onClick?: () => void\r\n}\r\n\r\nconst UserAvatar: React.FC<IUserAvatarProps> = ({onClick, image, style = {}, text}) => {\r\n\r\n  return <UserAvatarContainer className=\"avatar\" onClick={onClick} style={style} color={image || ''}>\r\n    {text}\r\n  </UserAvatarContainer>;\r\n};\r\n\r\nexport default UserAvatar;\r\n","import dateFormat from 'dateformat';\r\n\r\nimport { timestamp } from '../global.typings';\r\n\r\nconst DAY_BEFORE = 1000 * 60 * 60 * 24;\r\n\r\nconst formatDate = (timeStamp: timestamp) => {\r\n  const date = +new Date(timeStamp);\r\n  if (new Date(date).getDate() === new Date(Date.now()).getDate() - 1) {\r\n    return 'Yesterday';\r\n  }\r\n  if (Date.now() - date < DAY_BEFORE) {\r\n    return dateFormat(timeStamp, 'HH:MM');\r\n  } else {\r\n    return dateFormat(timeStamp, 'd.mm.yyyy');\r\n  }\r\n};\r\n\r\nexport default formatDate;","import styled from 'styled-components';\r\n\r\nexport const DialogStyled = styled.li<{ themeColor: string }>`\r\n  width: 100%;\r\n  padding: 10px;\r\n  display: flex;\r\n  height: 80px;\r\n  cursor: pointer;\r\n  transition: .1s;\r\n  user-select: none;\r\n\r\n  &:hover {\r\n    background-color: ${props => props.theme.colors.chatItemHover};\r\n  }\r\n\r\n  &.active {\r\n    background-color: ${props => props.themeColor};\r\n\r\n    .title, .text, .time {\r\n      color: #fff;\r\n    }\r\n    \r\n    .unread-count {\r\n      background-color: #fff;\r\n      color: ${props => props.themeColor};\r\n    }\r\n  }\r\n\r\n  .avatar {\r\n    position: relative;\r\n\r\n    &:before {\r\n      position: absolute;\r\n      content: '';\r\n      border-radius: 50%;\r\n      width: 13px;\r\n      height: 13px;\r\n      bottom: 0;\r\n      right: 0;\r\n      border: 2px solid #fff;\r\n      background-color: ${props => props.themeColor};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MainContent = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  width: 1px;\r\n\r\n  .title {\r\n    font-weight: 600;\r\n    font-size: ${props => props.theme.fontSizes.extraNormal};\r\n    color: ${props => props.theme.colors.heading};\r\n    margin-bottom: 5px;\r\n    flex: 1;\r\n  }\r\n\r\n  .text {\r\n    flex: 1;\r\n    width: 100%;\r\n    font-size: ${props => props.theme.fontSizes.extraNormal};\r\n    color: ${props => props.theme.colors.paragraph};\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nexport const ExtraContent = styled.div<{ themeColor: string }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n\r\n  .time {\r\n    color: ${props => props.theme.colors.paragraph};\r\n    font-size: ${props => props.theme.fontSizes.normal};\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  .unread-count {\r\n    display: flex;\r\n    justify-content: center;\r\n    width: fit-content;\r\n    align-items: center;\r\n    min-width: 20px;\r\n    height: 20px;\r\n    color: #fff;\r\n    padding: 0 5px;\r\n    margin-top: 5px;\r\n    background-color: ${props => props.themeColor};\r\n    border-radius: 10px/ 50%;\r\n    font-size: ${props => props.theme.fontSizes.small};\r\n  }\r\n`;","import React from 'react';\r\nimport { useAppSelector } from '@hooks/useAppSelector';\r\nimport UserAvatar from '@components/UserAvatar/UserAvatar';\r\nimport cn from 'classnames';\r\n\r\nimport { avatarImage, phone, timestamp } from '../../global.typings';\r\nimport formatDate from '../../utils/formatDate';\r\n\r\nimport { DialogStyled, MainContent, ExtraContent } from './Dialog.styles';\r\n\r\ninterface IDialogProps {\r\n  title: string;\r\n  text: string;\r\n  time: timestamp | null;\r\n  unreadMessagesCount: number | null;\r\n  partnerPhone: phone;\r\n  avatarName: string;\r\n  avatarImage: avatarImage;\r\n  isDialogExisted: boolean;\r\n  onClick: (phoneNumber: string) => void\r\n}\r\n\r\nconst Dialog: React.FC<IDialogProps> = ({\r\n  title,\r\n  partnerPhone,\r\n  text,\r\n  time,\r\n  avatarImage,\r\n  avatarName,\r\n  unreadMessagesCount,\r\n  isDialogExisted,\r\n  onClick\r\n}) => {\r\n  const themeColor = useAppSelector(state => state.settings.themeColor);\r\n  const activeDialogPhone = useAppSelector(state => state.dialog.activeDialog?.phoneNumber);\r\n\r\n  const openDialog = () => {\r\n    onClick(partnerPhone);\r\n  };\r\n\r\n  return (\r\n    <DialogStyled\r\n      onClick={openDialog}\r\n      themeColor={themeColor}\r\n      className={cn({active: partnerPhone === activeDialogPhone})}\r\n    >\r\n      <UserAvatar style={{marginRight: 15}} image={avatarImage} text={avatarName}/>\r\n      <MainContent>\r\n        <h4 className=\"title\">{title}</h4>\r\n        {text && <div className=\"text\">{text}</div>}\r\n      </MainContent>\r\n      {isDialogExisted &&\r\n      <ExtraContent themeColor={themeColor} className={cn({active: partnerPhone === activeDialogPhone})}>\r\n        {time && <span className=\"time\">{formatDate(time)}</span>}\r\n        {unreadMessagesCount && <span className=\"unread-count\">{unreadMessagesCount}</span>}\r\n      </ExtraContent>\r\n      }\r\n    </DialogStyled>\r\n  );\r\n};\r\n\r\nexport default Dialog;","import React, { useEffect, useRef } from 'react';\nimport { fetchActiveDialog } from '@reducers/dialogSlice/dialogSlice';\nimport { useAppDispatch, useAppSelector } from '@hooks/useAppSelector';\n\nimport { IWeakDialog } from '../../../global.typings';\nimport Dialog from '../../../shared/Dialog/Dialog';\nimport { AppDispatch } from '../../../store/store';\n\ninterface IDialogsProps {\n  dialogs: IWeakDialog[] | null,\n  isDialogExisted: boolean\n}\n\nconst Dialogs: React.FC<IDialogsProps> = ({dialogs, isDialogExisted}) => {\n  const dispatch = useAppDispatch();\n  const prevRequestRef = useRef<AppDispatch>(null);\n  const phoneNumber = useAppSelector(state => state.dialog.activeDialog?.phoneNumber);\n\n  const fetchDialog = (phone: string) => {\n    if (phoneNumber === phone) {\n      return;\n    }\n\n    window.emitter.emit('active-dialog-phone:open');\n    prevRequestRef.current?.abort();\n    prevRequestRef.current = dispatch(fetchActiveDialog({partnerPhone: phone}));\n  };\n\n  useEffect(() => {\n    window.emitter.on('active-dialog-phone:close', () => prevRequestRef.current?.abort());\n  }, []);\n\n  if (!dialogs) {\n    return null;\n  }\n\n  return (\n    <ul>\n      {dialogs.map(userDialog =>\n        <Dialog\n          key={userDialog.phoneNumber}\n          title={userDialog.fullName}\n          text={userDialog.lastMessage || ''}\n          partnerPhone={userDialog.phoneNumber}\n          avatarName={userDialog.avatarText}\n          avatarImage={userDialog.avatar}\n          time={userDialog.lastMessageDate}\n          unreadMessagesCount={userDialog.unreadMessageCount}\n          isDialogExisted={isDialogExisted}\n          onClick={fetchDialog}\n        />\n      )}\n    </ul>\n  );\n};\n\nexport default Dialogs;","import styled from 'styled-components';\r\n\r\nexport const InfoStyled = styled.div`\r\n  background-color: ${props => props.theme.colors.searchTitle};\r\n  padding: 7px 10px;\r\n  color: ${props => props.theme.colors.paragraph};\r\n  font-size: ${props => props.theme.fontSizes.extraSmall};\r\n`;\r\n","import React from 'react';\r\n\r\nimport {InfoStyled} from './Info.styles';\r\n\r\ninterface IInfoProps {\r\n    infoText: string\r\n}\r\n\r\nconst Info: React.FC<IInfoProps> = ({infoText}) => {\r\n  return (\r\n    <InfoStyled>\r\n      {infoText}\r\n    </InfoStyled>\r\n  );\r\n};\r\n\r\nexport default Info;","import React from 'react';\r\nimport { useAppSelector } from '@hooks/useAppSelector';\r\nimport Dialogs from '@components/ChatsSide/Dialogs/Dialogs';\r\n\r\nimport Info from '../../../shared/Info/Info';\r\n\r\n\r\nconst GlobalSearchResult: React.FC = () => {\r\n  const globalSearchResults = useAppSelector(({dialog}) => dialog.globalSearchResults);\r\n\r\n  if (!globalSearchResults?.globalDialogs.length && !globalSearchResults?.userDialogs.length) {\r\n    return <Info infoText=\"Not found\"/>;\r\n  }\r\n\r\n  const {userDialogs, globalDialogs} = globalSearchResults;\r\n\r\n  return (\r\n    <>\r\n      {userDialogs.length ? <Dialogs dialogs={userDialogs} isDialogExisted/> : null}\r\n      {globalDialogs.length ?\r\n        <>\r\n          <Info infoText=\"Global search results\"/>\r\n          <Dialogs dialogs={globalDialogs} isDialogExisted={false}/>\r\n        </> :\r\n        null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GlobalSearchResult;","import React from 'react';\nimport { useAppSelector } from '@hooks/useAppSelector';\n\nimport Dialogs from '../Dialogs/Dialogs';\n\nconst UserDialogs = () => {\n  const {dialogs} = useAppSelector(state => state.dialog);\n\n  return <Dialogs dialogs={dialogs} isDialogExisted/>;\n};\n\nexport default UserDialogs;\n","import React, { memo } from 'react';\r\nimport { RenderComponent } from '@components/ChatsSide/ChatsSide.typings';\r\nimport GlobalSearchResult from '@components/ChatsSide/GlobalSearchResult/GlobalSearchResult';\r\nimport UserDialogs from '@components/ChatsSide/UserDialogs/UserDialogs';\r\n\r\nimport Info from '../../../shared/Info/Info';\r\n\r\ninterface IDialogListProps {\r\n  renderComponent: RenderComponent;\r\n}\r\n\r\nconst DialogList: React.FC<IDialogListProps> = memo(({renderComponent}) => {\r\n  switch (renderComponent) {\r\n  case RenderComponent.LOADING:\r\n    return <Info infoText=\"Searching...\"/>;\r\n  case RenderComponent.SEARCH_DIALOGS:\r\n    return <GlobalSearchResult/>;\r\n  case RenderComponent.USER_DIALOGS:\r\n    return <UserDialogs/>;\r\n  }\r\n});\r\n\r\nexport default DialogList;","import { RenderComponent } from '@components/ChatsSide/ChatsSide.typings';\r\n\r\nexport const getDialogsType = (setSearchDialogs: boolean, isLoading: boolean): RenderComponent => {\r\n  if (setSearchDialogs) {\r\n    return RenderComponent.SEARCH_DIALOGS;\r\n  }\r\n\r\n  if (isLoading) {\r\n    return RenderComponent.LOADING;\r\n  }\r\n\r\n  return RenderComponent.USER_DIALOGS;\r\n};\r\n","import useMatchMedia from '@hooks/useMatchMedia';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport const usePhoneDialogBehavior = () => {\r\n  const isPhone = useMatchMedia();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  useEffect(() => {\r\n    if (isPhone) {\r\n      window.emitter.on('active-dialog-phone:open', () => setIsOpen(true));\r\n      window.emitter.on('active-dialog-phone:close', () => setIsOpen(false));\r\n    } else {\r\n      window.emitter.un('active-dialog-phone:open');\r\n      window.emitter.un('active-dialog-phone:close');\r\n    }\r\n  }, [isPhone]);\r\n\r\n  return isOpen;\r\n};\r\n","import styled from 'styled-components';\r\nimport { Scroll } from '@styled-components/Scroll';\r\n\r\n\r\nexport const ChatsSideStyled = styled.div<{isPhone: boolean}>`\r\n  height: 100%;\r\n  width: ${props => (props.isPhone ? '100vw' : '500px')};\r\n  background-color: ${props => props.theme.colors.bgColor};\r\n  border-right: 1px solid  ${props => props.theme.colors.helpingBorders};\r\n  transition: ${props => props.theme.other.transitionSpeedSlow};\r\n  \r\n  &.move {\r\n    transform: translateX(-50px);\r\n  }\r\n`;\r\n\r\nexport const ChatsSideHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n  height: 57px;\r\n`;\r\n\r\nexport const ChatsContainer = styled(Scroll)`\r\n  position: relative;\r\n  overflow: auto;\r\n  height: calc(100vh - 57px);\r\n  overflow-x: hidden;\r\n`;","import React from 'react';\r\nimport HamburgerMenuIcon from '@components/HamburgerMenuIcon/HamburgerMenuIcon';\r\nimport useMatchMedia from '@hooks/useMatchMedia';\r\nimport { useDialogs } from '@components/ChatsSide/ChatsSide.hook/useDialogs';\r\nimport DialogList from '@components/ChatsSide/DialogList/DialogList';\r\nimport { getDialogsType } from '@components/ChatsSide/ChatsSide.utils/getDialogsType';\r\nimport { usePhoneDialogBehavior } from '@hooks/usePhoneDialogBehavior';\r\nimport cn from 'classnames';\r\n\r\nimport Input from '../../shared/Input/Input';\r\n\r\nimport { ChatsContainer, ChatsSideStyled, ChatsSideHeader } from './ChatsSide.styles';\r\n\r\nconst ChatsSide = () => {\r\n  const {searchValue, searchDialogs, isLoading, setSearchValue} = useDialogs();\r\n  const isPhone = useMatchMedia();\r\n  const isPhoneActiveDialogOpen = usePhoneDialogBehavior();\r\n\r\n  return (\r\n    <ChatsSideStyled className={cn({move: isPhoneActiveDialogOpen})} isPhone={isPhone}>\r\n      <ChatsSideHeader>\r\n        <HamburgerMenuIcon/>\r\n        <Input value={searchValue} setValue={setSearchValue} placeholder=\"Search...\">\r\n          <Input.Search timesIcon bordered/>\r\n        </Input>\r\n      </ChatsSideHeader>\r\n      <ChatsContainer>\r\n        <DialogList renderComponent={getDialogsType(searchDialogs, isLoading)}/>\r\n      </ChatsContainer>\r\n    </ChatsSideStyled>\r\n  );\r\n};\r\n\r\nexport default ChatsSide;\r\n","import { IMessage } from '../../../global.typings';\r\n\r\nexport const isLastMessageByUser = (prevMessage: IMessage, nextMessage: IMessage | undefined) => {\r\n  if (!nextMessage) {\r\n    return true;\r\n  }\r\n\r\n  return prevMessage.sender !== nextMessage.sender;\r\n};\r\n","export const isShowUnreadTooltip = (unreadMessagesCount: number | null, messagesCount: number, index: number) => {\r\n  if (!unreadMessagesCount) {\r\n    return false;\r\n  }\r\n  return messagesCount - unreadMessagesCount === index;\r\n};\r\n","\r\n\r\n\r\nexport const beautifyPhone = (phone: string | null): string =>  {\r\n  if (!phone) return '';\r\n\r\n  return `+ ${phone[0]} ${phone.slice(1, 4)} ${phone.slice(4, 7)} ${phone.slice(7)}`;\r\n};","import styled from 'styled-components';\r\n\r\nexport const PartnerInfoStyled = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 45px;\r\n  background-color: ${props => props.theme.colors.bgColor};\r\n  padding: 5px 10px;\r\n  border-bottom: 1px solid ${props => props.theme.colors.helpingBorders};\r\n  border-radius: 0 0 10px 10px;\r\n  \r\n  .back-icon {\r\n    width: 20px;\r\n    height: 20px;\r\n    margin-right: 20px;\r\n    fill: ${props => props.theme.colors.icons};\r\n    transform: rotate(180deg);\r\n  }\r\n  .main-info {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  h5 {\r\n    font-size: ${props => props.theme.fontSizes.normal};\r\n    color: ${props => props.theme.colors.heading};\r\n    font-weight: 600;\r\n  }\r\n\r\n  span {\r\n    color: ${props => props.theme.colors.paragraph};\r\n    font-size: ${props => props.theme.fontSizes.extraSmall};\r\n  }\r\n`;\r\n","import dateFormat from 'dateformat';\r\n\r\nimport { timestamp } from '../../global.typings';\r\n\r\nconst DAY_TIMESTAMP = 1000 * 60 * 60 * 24;\r\n\r\nconst dateToString = (date: timestamp): string => {\r\n  const now = Date.now();\r\n  if (now - date < 1000 * 60) {\r\n    return 'recently';\r\n  }\r\n  if (now - date < DAY_TIMESTAMP && new Date(date).getDate() === new Date(now).getDate()) {\r\n    return dateFormat(date, 'HH:MM');\r\n  }\r\n  if (now - date < DAY_TIMESTAMP && new Date(date).getDate() !== new Date(now).getDate()) {\r\n    return 'yesterday at ' + dateFormat(date, 'HH:MM');\r\n  }\r\n  return dateFormat(date, 'dd.mm.yyyy');\r\n\r\n};\r\n\r\nexport default dateToString;","import React from 'react';\r\nimport { useAppDispatch, useAppSelector } from '@hooks/useAppSelector';\r\nimport {ReactComponent as BackIcon} from '@images/back-icon.svg';\r\nimport useMatchMedia from '@hooks/useMatchMedia';\r\nimport { clearActiveDialog } from '@reducers/dialogSlice/dialogSlice';\r\n\r\nimport { beautifyPhone } from '../../beautifyPhone';\r\n\r\n\r\nimport { PartnerInfoStyled } from './PartnerInfo.styles';\r\nimport dateToString from './helpers';\r\n\r\nconst PartnerInfo: React.FC = () => {\r\n  const isLoading = useAppSelector(state => state.dialog.isActiveDialogLoaded);\r\n  const {phoneNumber, isOnline, lastSeen} = useAppSelector(state => state.dialog.activeDialog!);\r\n  const isPhone = useMatchMedia();\r\n  const dispatch = useAppDispatch();\r\n\r\n  const closeActiveDialog = () => {\r\n    window.emitter.emit('active-dialog-phone:close');\r\n    dispatch(clearActiveDialog());\r\n  };\r\n\r\n  return (\r\n    <PartnerInfoStyled>\r\n      {isPhone && <BackIcon className=\"back-icon\" onClick={closeActiveDialog}/>}\r\n      <div className=\"main-info\">\r\n        <h5>{beautifyPhone(phoneNumber)}</h5>\r\n        {isLoading && <span>Waiting for network...</span>}\r\n        {!isLoading && <span>{isOnline ? 'Online' : `last seen ${dateToString(lastSeen || 0)}`}</span>}\r\n      </div>\r\n    </PartnerInfoStyled>\r\n  );\r\n};\r\n\r\nexport default PartnerInfo;\r\n","import io from 'socket.io-client';\r\n\r\nimport { BASE_URL } from './types';\r\nconst socket = io(BASE_URL || '');\r\nexport default socket;","import socket from '../socket';\r\n\r\nconst useSocket = (msgName: string) => {\r\n\r\n  return {\r\n    on: cb => {\r\n      socket.on(msgName, data => {\r\n        cb(data);\r\n      });\r\n    },\r\n    off: () => {\r\n      socket.off(msgName);\r\n    },\r\n    emit: (data: any) => {\r\n      socket.emit(msgName, data);\r\n    }\r\n  };\r\n};\r\n\r\nexport default useSocket;","import styled from 'styled-components';\r\n\r\n\r\nexport const MessageInputContainer = styled.div`\r\n  display: flex;\r\n  padding: 5px 10px;\r\n  align-items: center;\r\n  width: 100%;\r\n  background-color: ${props => props.theme.colors.bgColor};\r\n  border-radius: 10px 10px 0 0;\r\n\r\n  .send-button {\r\n    clip-path: polygon(9% 44%, 0 0, 100% 50%, 0 100%, 9% 51%, 63% 51%, 63% 44%);\r\n    background-color: ${props => props.theme.colors.blue};\r\n    width: 30px;\r\n    height: 30px;\r\n    outline: none;\r\n    border: none;\r\n    cursor: pointer;\r\n    opacity: 0;\r\n    visibility: hidden;\r\n    transform: scale(0);\r\n    margin-bottom: 6px;\r\n    transition: .1s linear;\r\n    align-self: flex-end;\r\n    margin-left: 10px;\r\n\r\n    &.show {\r\n      opacity: 1;\r\n      visibility: visible;\r\n      transform: scale(1);\r\n    }\r\n  }\r\n`;","import React from 'react';\r\nimport useInput from '@hooks/useInput';\r\nimport useSocket from '@hooks/useSocket';\r\nimport { useAppDispatch, useAppSelector } from '@hooks/useAppSelector';\r\nimport cn from 'classnames';\r\nimport { addMessage } from '@reducers/dialogSlice/dialogSlice';\r\n\r\nimport Input from '../../../shared/Input/Input';\r\nimport { IMessage } from '../../../global.typings';\r\n\r\nimport { MessageInputContainer } from './MessageInput.styles';\r\n\r\ninterface IMessageInputProps {\r\n  scrollToBottomIsNeeded: (forceScroll?: boolean) => void;\r\n}\r\n\r\nconst MessageInput: React.FC<IMessageInputProps> = ({scrollToBottomIsNeeded}) => {\r\n  const [inputValue, changeInputValue, clearInput] = useInput();\r\n  const activeDialog = useAppSelector(state => state.dialog.activeDialog);\r\n  const {sendHotkey} = useAppSelector(state => state.settings);\r\n  const dispatch = useAppDispatch();\r\n  const messageSocket = useSocket('send message');\r\n  const userPhone = useAppSelector(({user}) => user.phoneNumber);\r\n\r\n  const sendMessage = () => {\r\n    if (inputValue.trim() && userPhone) {\r\n\r\n      const message = {\r\n        sender: 'user',\r\n        createdDate: Date.now(),\r\n        text: inputValue\r\n      } as IMessage;\r\n\r\n      dispatch(addMessage(message));\r\n      messageSocket.emit({\r\n        senderPhone: userPhone,\r\n        receiverPhone: activeDialog?.phoneNumber,\r\n        text: message.text,\r\n        createdDate: message.createdDate\r\n      });\r\n      clearInput();\r\n      setTimeout(() => scrollToBottomIsNeeded(true));\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const sentMessageByHotkey = (e: React.KeyboardEvent<Element>) => {\r\n    if (sendHotkey === 'enter' && e.key === 'Enter') sendMessage();\r\n    if (sendHotkey === 'ctrl-enter' && e.key === 'Enter' && e.ctrlKey) sendMessage();\r\n  };\r\n\r\n  return (\r\n    <MessageInputContainer>\r\n      <Input\r\n        value={inputValue}\r\n        setValue={changeInputValue}\r\n        placeholder=\"Write a message...\"\r\n        onKeyUp={sentMessageByHotkey}\r\n      >\r\n        <Input.TextArea onHeightUpdate={scrollToBottomIsNeeded} maxLines={5}/>\r\n      </Input>\r\n      <button onClick={sendMessage} className={cn('send-button', {show: inputValue})}/>\r\n    </MessageInputContainer>\r\n  );\r\n};\r\n\r\nexport default MessageInput;\r\n","import styled, { css } from 'styled-components';\r\n\r\nexport const MessageStyled = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 5px 0;\r\n`;\r\n\r\nexport const MessageContent = styled.div<{ decorate: boolean }>`\r\n  max-width: min(90%, 500px);\r\n  padding: 7px 10px;\r\n  border-radius: 7px;\r\n  position: relative;\r\n\r\n  .text {\r\n    color: ${props => props.theme.colors.heading};\r\n    font-size: ${props => props.theme.fontSizes.medium};\r\n    word-break: break-all;\r\n  }\r\n\r\n  .date {\r\n    font-size: ${props => props.theme.fontSizes.small};\r\n    color: ${props => props.theme.colors.paragraph};\r\n    transform: translateY(7px);\r\n    margin-left: 5px;\r\n    float: right;\r\n  }\r\n\r\n  &::before {\r\n    position: absolute;\r\n    content: '';\r\n    width: 20px;\r\n    height: 20px;\r\n    border-left: 10px solid transparent;\r\n    border-right: 10px solid transparent;\r\n    bottom: 0;\r\n  }\r\n\r\n  &.user {\r\n    margin-left: auto;\r\n    background-color: ${props => props.theme.colors.userMessage};\r\n    margin-right: 7px;\r\n    ${props => props.decorate && css`\r\n      &::before {\r\n        border-bottom: 12px solid ${props => props.theme.colors.userMessage};\r\n        right: -7px;\r\n      }\r\n    `}\r\n  }\r\n\r\n  &.partner {\r\n    background-color: ${props => props.theme.colors.partnerMessage};\r\n    margin-left: 7px;\r\n    ${props => props.decorate && css`\r\n      &::before {\r\n        border-bottom: 12px solid ${props => props.theme.colors.partnerMessage};\r\n        left: -7px;\r\n      }\r\n    `}\r\n\r\n  }\r\n`;","import styled from 'styled-components';\r\nimport { rgba } from 'polished';\r\n\r\nexport const DateStyled = styled.span`\r\n  position: sticky;\r\n  top: 0;\r\n  align-self: center;\r\n  color: #fff;\r\n  border-radius: 10px;\r\n  background-color: ${props => rgba(props.theme.colors.dateBackground, .5)};\r\n  padding: 4px 7px;\r\n  width: 10%;\r\n  min-width: 100px;\r\n  text-align: center;\r\n  font-size: ${props => props.theme.fontSizes.normal};\r\n  z-index: 999;\r\n`;\r\n","import React from 'react';\r\nimport dateFormat from 'dateformat';\r\n\r\nimport { DateStyled } from './DateTooltip.styles';\r\n\r\ninterface IDateProps {\r\n  timestamp: number;\r\n}\r\n\r\nconst DateTooltip: React.FC<IDateProps> = ({timestamp}) => {\r\n  return (\r\n    <DateStyled>\r\n      {dateFormat(timestamp, 'mmmm d')}\r\n    </DateStyled>\r\n  );\r\n};\r\n\r\nexport default DateTooltip;","import styled from 'styled-components';\r\n\r\nexport const UnreadTooltipStyled = styled.div`\r\n  width: calc(100% + 40px);\r\n  transform: translateX(-20px);\r\n  padding: 5px 0;\r\n  text-align: center;\r\n  color: ${props => props.theme.colors.unreadText};\r\n  background-color: ${props => props.theme.colors.unreadTitle};\r\n  font-weight: 500;\r\n  margin: 5px 0;\r\n  position: relative;\r\n`;\r\n","import React from 'react';\r\n\r\nimport { UnreadTooltipStyled } from './UnreadTooltip.styles';\r\n\r\n\r\nconst UnreadTooltip = () => {\r\n  return (\r\n    <UnreadTooltipStyled>\r\n      Unread messages\r\n    </UnreadTooltipStyled>\r\n  );\r\n};\r\n\r\nexport default UnreadTooltip;","import React from 'react';\r\nimport cn from 'classnames';\r\nimport dateFormat from 'dateformat';\r\n\r\nimport { MessageStyled, MessageContent } from './Message.styles';\r\nimport DateTooltip from './DateTooltip/DateTooltip';\r\nimport UnreadTooltip from './UnreadTooltip/UnreadTooltip';\r\n\r\ninterface MessageComponent {\r\n  DateTooltip: typeof DateTooltip;\r\n  UnreadTooltip: typeof UnreadTooltip;\r\n}\r\n\r\ninterface IMessageProps {\r\n  text: string;\r\n  date: number;\r\n  sender: 'user' | 'partner';\r\n  isLastMessageByUser: boolean;\r\n  isDateTooltip: boolean;\r\n  isUnreadTooltip: boolean;\r\n}\r\n\r\nconst Message: React.FC<IMessageProps> & MessageComponent = ({\r\n  text,\r\n  date,\r\n  sender,\r\n  isLastMessageByUser,\r\n  isDateTooltip,\r\n  isUnreadTooltip\r\n}) => {\r\n  return (\r\n    <>\r\n      {isDateTooltip && <Message.DateTooltip timestamp={date}/>}\r\n      {isUnreadTooltip && <Message.UnreadTooltip/>}\r\n      <MessageStyled>\r\n        <MessageContent\r\n          decorate={isLastMessageByUser}\r\n          className={cn({user: sender === 'user', partner: sender === 'partner'})}\r\n        >\r\n          <span className=\"text\">{text}</span>\r\n          <span className=\"date\">{dateFormat(date, 'HH:MM')}</span>\r\n        </MessageContent>\r\n      </MessageStyled>\r\n    </>\r\n  );\r\n};\r\n\r\nMessage.DateTooltip = DateTooltip;\r\nMessage.UnreadTooltip = UnreadTooltip;\r\n\r\nexport default Message;","import styled from 'styled-components';\r\n\r\nexport const LoaderStyled = styled.div`\r\n  font-size: 5px;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  border-top: 1.1em solid rgba(255, 255, 255, 0.2);\r\n  border-right: 1.1em solid rgba(255, 255, 255, 0.2);\r\n  border-bottom: 1.1em solid rgba(255, 255, 255, 0.2);\r\n  border-left: 1.1em solid #ffffff;\r\n  animation: load 1.1s infinite linear;\r\n\r\n  &, &:after {\r\n    border-radius: 50%;\r\n    width: 10em;\r\n    height: 10em;\r\n  }\r\n\r\n  @keyframes load {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { LoaderStyled } from './Loader.styles';\r\n\r\nconst Loader = () => {\r\n  return <LoaderStyled/>;\r\n};\r\n\r\nexport default Loader;","import styled from 'styled-components';\r\nimport { Scroll } from '@styled-components/Scroll';\r\n\r\nexport const MessagesStyled = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const MessagesContent = styled(Scroll)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 5px 20px;\r\n  overflow: auto;\r\n  overflow-x: hidden;\r\n`;\r\n","import React, { useCallback, useEffect, useLayoutEffect, useRef } from 'react';\r\nimport { isNewDay } from '@components/MessagesSide/MessagesSide.utils/isNewDay';\r\nimport { isLastMessageByUser } from '@components/MessagesSide/MessagesSide.utils/isLastMessageByUser';\r\nimport { useAppSelector } from '@hooks/useAppSelector';\r\nimport { isShowUnreadTooltip } from '@components/MessagesSide/MessagesSide.utils/isShowUnreadTooltip';\r\nimport { useEventListener } from '@hooks/useEventListener';\r\nimport { isElementScrollToBottom } from '@components/MessagesSide/MessagesSide.utils/isElementScrollToBottom';\r\nimport PartnerInfo from '@components/PartnerInfo/PartnerInfo';\r\nimport MessageInput from '@components/MessagesSide/MessageInput/MessageInput';\r\n\r\nimport Message from '../../../shared/Message/Message';\r\nimport Loader from '../../../shared/Loader/Loader';\r\n\r\nimport { MessagesStyled, MessagesContent } from './Messages.styles';\r\n\r\nconst Messages = () => {\r\n  const activeDialog = useAppSelector(state => state.dialog.activeDialog);\r\n  const isLoading = useAppSelector(state => state.dialog.isActiveDialogLoaded);\r\n  const messagesRef = useRef<HTMLDivElement>(null);\r\n  const isScrollRef = useRef(true);\r\n\r\n\r\n  const scrollToBottomIsNeeded = (forceScroll?: boolean, isSmooth = true) => {\r\n    if (messagesRef.current && (forceScroll || isScrollRef.current)) {\r\n      if (isSmooth) {\r\n        messagesRef.current.scrollTo({top: messagesRef.current.scrollHeight, behavior: 'smooth'});\r\n        return;\r\n      }\r\n\r\n      messagesRef.current.scrollTop = messagesRef.current.scrollHeight;\r\n    }\r\n  };\r\n\r\n  useEffect(() => scrollToBottomIsNeeded(), [activeDialog?.messages]);\r\n\r\n  useLayoutEffect(() => scrollToBottomIsNeeded(true, false), [activeDialog?.phoneNumber, isLoading]);\r\n\r\n  const onMessageScroll = useCallback(() => {\r\n    if (messagesRef.current && isElementScrollToBottom(messagesRef.current)) {\r\n      isScrollRef.current = true;\r\n      return;\r\n    }\r\n    if (isScrollRef.current) {\r\n      isScrollRef.current = false;\r\n      return;\r\n    }\r\n    isScrollRef.current = false;\r\n  }, []);\r\n\r\n  useEventListener('scroll', onMessageScroll, messagesRef);\r\n\r\n  return (\r\n    <>\r\n      {activeDialog && <PartnerInfo/>}\r\n      {isLoading ?\r\n        <Loader/> :\r\n        <>\r\n          <MessagesStyled>\r\n            <MessagesContent ref={messagesRef}>\r\n              {activeDialog?.messages.map((message, index, messages) =>\r\n                <Message\r\n                  key={message.createdDate + message.sender}\r\n                  text={message.text}\r\n                  date={message.createdDate}\r\n                  sender={message.sender}\r\n                  isDateTooltip={isNewDay(messages[index - 1], message)}\r\n                  isUnreadTooltip={isShowUnreadTooltip(activeDialog?.unreadMessageCount, messages.length, index)}\r\n                  isLastMessageByUser={isLastMessageByUser(message, message[index + 1])}/>\r\n              )}\r\n            </MessagesContent>\r\n          </MessagesStyled>\r\n          <MessageInput scrollToBottomIsNeeded={scrollToBottomIsNeeded}/>\r\n        </>\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Messages;","export const isElementScrollToBottom = (element: Element) => {\r\n  return element.scrollHeight - element.scrollTop === element.clientHeight;\r\n};\r\n","import { IMessage } from '../../../global.typings';\r\n\r\nexport const isNewDay = (prevMessage: IMessage | undefined, currentMessage: IMessage) => {\r\n  if (!prevMessage) {\r\n    return true;\r\n  }\r\n\r\n  return (new Date(prevMessage.createdDate).getDate() !== new Date(currentMessage.createdDate).getDate() ||\r\n    currentMessage.createdDate - prevMessage.createdDate > 1000 * 60 * 60 * 24);\r\n};\r\n","import styled from 'styled-components';\r\nimport {rgba} from 'polished';\r\n\r\nexport const MessageSideStyled = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n  position: relative;\r\n  height: 100%;\r\n  transition: ${props => props.theme.other.transitionSpeedSlow};\r\n  &.isMove {\r\n    transform: translateX(-100vw);\r\n  }\r\n`;\r\n\r\n\r\nexport const Background = styled.img`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  z-index: -1;\r\n`;\r\n\r\nexport const EmptyActiveDialog = styled.span`\r\n  margin: auto;\r\n  color: #fff;\r\n  font-size: ${props => props.theme.fontSizes.normal};\r\n  padding: 5px;\r\n  background-color: ${props => rgba(props.theme.colors.bgColor, .2)};\r\n  border-radius: 10px;\r\n`;","import React from 'react';\r\nimport { useAppSelector } from '@hooks/useAppSelector';\r\nimport Messages from '@components/MessagesSide/Messages/Messages';\r\nimport { usePhoneDialogBehavior } from '@hooks/usePhoneDialogBehavior';\r\nimport cn from 'classnames';\r\n\r\nimport { BASE_URL } from '../../types';\r\n\r\nimport { MessageSideStyled, Background, EmptyActiveDialog } from './MessagesSide.styles';\r\n\r\nconst MessagesSide: React.FC = () => {\r\n  const backgroundImage = useAppSelector(({settings}) => settings.backgroundImage);\r\n  const messages = useAppSelector(state => state.dialog.activeDialog?.messages);\r\n  const isLoading = useAppSelector(state => state.dialog.isActiveDialogLoaded);\r\n  const isPhoneActiveDialogOpen = usePhoneDialogBehavior();\r\n\r\n  return (\r\n    <MessageSideStyled className={cn({isMove: isPhoneActiveDialogOpen})}>\r\n      <Background src={`${BASE_URL}/images/backgrounds/${backgroundImage}.webp`}/>\r\n      {!messages && !isLoading ?\r\n        <EmptyActiveDialog>Select a chat to start messaging</EmptyActiveDialog> :\r\n        <Messages/>\r\n      }\r\n    </MessageSideStyled>\r\n  );\r\n};\r\n\r\nexport default MessagesSide;\r\n","export const getFullName = (nickname: string, name: string, surname: string) => {\r\n\r\n  if (name) {\r\n    return `${name} ${surname || ''}`;\r\n  }\r\n\r\n  return nickname;\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const UserContainer = styled.div`\r\n  display: flex;\r\n  border-bottom: 1px solid ${props => props.theme.colors.helpingBorders};\r\n  background-color: ${props => props.theme.colors.bgColor};\r\n  margin-bottom: 5px;\r\n  &.avatar-top {\r\n    flex-direction: column;\r\n\r\n    .avatar {\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n\r\n  &.avatar-left {\r\n    align-items: center;\r\n\r\n    .avatar {\r\n      margin-right: 20px;\r\n    }\r\n  }\r\n  \r\n  .info.center {\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n  }\r\n  .name {\r\n    color: ${props => props.theme.colors.heading};\r\n    font-size: ${props => props.theme.fontSizes.medium};\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  .phone {\r\n    font-size: ${props => props.theme.fontSizes.extraSmall};\r\n    color: ${props => props.theme.colors.heading};\r\n    font-weight: 500;\r\n  }\r\n\r\n  .nickname {\r\n    position: relative;\r\n    color: ${props => props.theme.colors.paragraph};\r\n    font-size: ${props => props.theme.fontSizes.normal};\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      &:before {\r\n        position: absolute;\r\n        content: \"\";\r\n        background-color: ${props => props.theme.colors.paragraph};\r\n        bottom: 0;\r\n        height: .5px;\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n`;","import React, { CSSProperties, FC } from 'react';\r\nimport { useAppSelector } from '@hooks/useAppSelector';\r\nimport UserAvatar from '@components/UserAvatar/UserAvatar';\r\nimport noop from '@helpers/noop';\r\nimport cn from 'classnames';\r\n\r\nimport { beautifyPhone } from '../../beautifyPhone';\r\nimport { getFullName } from '../../utils/getFullName';\r\n\r\nimport { UserContainer } from './User.styles';\r\n\r\ninterface IUserProps {\r\n  onAvatarClick?: () => void,\r\n  onNameClick?: () => void,\r\n  onPhoneClick?: () => void,\r\n  onNicknameClick?: () => void\r\n  nickname?: boolean,\r\n  phone?: boolean\r\n  avatarPos: 'avatar-top' | 'avatar-left',\r\n  styleContainer?: CSSProperties,\r\n  textPosition?: 'left' | 'center',\r\n  styleAvatar?: CSSProperties\r\n}\r\n\r\nconst User: FC<IUserProps> = ({textPosition = '', ...props}) => {\r\n  const {avatar, name, surname, phoneNumber, nickname} = useAppSelector(state => state.user);\r\n\r\n  return (\r\n    <UserContainer style={props.styleContainer} className={props.avatarPos}>\r\n      <UserAvatar style={props.styleAvatar} onClick={props.onAvatarClick || noop} image={avatar}\r\n        text={getFullName(name || '', surname || '', nickname || '')}/>\r\n      <div className={cn({info: true, [textPosition]: true})}>\r\n        <h4 className=\"name\" onClick={props.onNameClick || noop}>\r\n          {name ? `${name} ${surname}` : 'Please, enter name'}\r\n        </h4>\r\n        {props.phone && <p className=\"phone\" onClick={props.onPhoneClick || noop}>{beautifyPhone(phoneNumber)}</p>}\r\n        {props.nickname && <span className=\"nickname\" onClick={props.onNicknameClick || noop}>@{nickname}</span>}\r\n      </div>\r\n    </UserContainer>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import { typeOfSettings } from '@reducers/settingsSlice/types';\r\n\r\nconst popupOpen = (type: typeOfSettings) => window.emitter.emit(type + '-popup:open');\r\n\r\nexport default popupOpen;\r\n","import styled from 'styled-components';\r\n\r\nexport const Switcher = styled.span<{color: string}>`\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 24px;\r\n  height: 16px;\r\n  margin-left: auto;\r\n  background-color: ${props => props.theme.colors.switcher};\r\n  border-radius: 10px;\r\n\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    width: 20px;\r\n    height: 20px;\r\n    top: -2px;\r\n    left: calc(-10px + 2px);\r\n    border-radius: 50%;\r\n    background-color: ${props => props.theme.colors.switcherTumbler};\r\n    border: 2px solid ${props => props.theme.colors.switcher};\r\n    transition: ${props => props.theme.other.transitionSpeed};\r\n  }\r\n\r\n  &.night-mode {\r\n    background-color: ${props => props.color};\r\n    &:after {\r\n      left: calc(24px - 2px - 10px);\r\n      border: 2px solid  ${props => props.color};\r\n    }\r\n  }\r\n`;","import React, { useEffect } from 'react';\nimport { useAppDispatch, useAppSelector } from '@hooks/useAppSelector';\r\nimport cn from 'classnames';\r\nimport { toggleNightMode } from '@reducers/settingsSlice/settingsSlice';\n\r\nimport { Switcher } from './ModeSwitcher.styles';\r\n\r\n\r\nconst ModeSwitcher = () => {\r\n\r\n  const {isNightMode} = useAppSelector(state => state.settings);\r\n  const {themeColor} = useAppSelector(state => state.settings);\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    const isNight = window.storage.get<boolean>('night-mode');\r\n    isNight && isNightMode !== isNight && dispatch(toggleNightMode());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.storage.set('night-mode', isNightMode);\r\n  }, [isNightMode]);\r\n\r\n  return <Switcher color={themeColor} className={cn({'night-mode': isNightMode})}/>;\r\n};\r\n\r\nexport default ModeSwitcher;\r\n","import React, { FC, useEffect, useState } from 'react';\r\n\r\ninterface IIconImageProps {\r\n  imageName: string\r\n}\r\n\r\nconst IconImage: FC<IIconImageProps> = ({imageName}) => {\r\n  const [image, setImage] = useState('');\r\n\r\n  useEffect(() => {\r\n    import(`@images/side-menu/${imageName}.png`).then(image => setImage(image.default));\r\n  }, []);\r\n\r\n  return (\r\n    <img width={24} height={24} src={image} style={{borderRadius: 7}} alt={imageName}/>\r\n  );\r\n};\r\n\r\nexport default IconImage;\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const SettingsContainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background-color: rgba(0, 0, 0, .5);\r\n  z-index: 1000;\r\n  visibility: hidden;\r\n  opacity: 0;\r\n  transition: ${props => props.theme.other.transitionSpeed};\r\n\r\n  &.active {\r\n    visibility: visible;\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const SettingsContent = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  background-color: ${props => props.theme.colors.bgColor};\r\n  width: 250px;\r\n  transition: ${props => props.theme.other.transitionSpeed};\r\n  transform: translateX(-100%);\r\n  z-index: 10000;\r\n  box-shadow: 4px 0 8px 0 rgba(34, 60, 80, 0.2);\r\n  border-radius: 5px;\r\n\r\n  &.active {\r\n    transform: translateX(0);\r\n  }\r\n`;\r\n\r\nexport const SettingsHeader = styled.div<{ backgroundImage: string }>`\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  width: 100%;\r\n  color: #fff;\r\n`;\r\n","import React from 'react';\r\nimport { useAppDispatch, useAppSelector } from '@hooks/useAppSelector';\r\nimport { getSideItems } from '@components/Settings/helpers';\r\nimport { switchSettings, toggleNightMode } from '@reducers/settingsSlice/settingsSlice';\r\nimport User from '@helpComponents/User/User';\r\nimport popupOpen from '@helpers/popupOpen';\r\nimport ModeSwitcher from '@components/ModeSwitcher/ModeSwitcher';\r\n\r\nimport ListItem from '../../shared/ListItem/ListItem';\r\nimport IconImage from '../../shared/IconImage/IconImage';\r\n\r\nimport { SettingsContainer, SettingsContent, SettingsHeader } from './Settings.styles';\r\n\r\nconst Settings: React.FC = () => {\r\n  const {isShowSettings, backgroundImage} = useAppSelector(state => state.settings);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onCloseSettings = () => {\r\n    dispatch(switchSettings(false));\r\n  };\r\n\r\n  const changeMode = () => {\r\n    dispatch(toggleNightMode());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SettingsContainer className={isShowSettings ? 'active' : ''} onClick={onCloseSettings}>\r\n      </SettingsContainer>\r\n      <SettingsContent className={isShowSettings ? 'active' : ''}>\r\n        <SettingsHeader backgroundImage={backgroundImage}>\r\n          <User avatarPos=\"avatar-top\" styleContainer={{padding: '20px 25px 10px'}} phone/>\r\n        </SettingsHeader>\r\n        {getSideItems().map(item => <ListItem key={item.text} text={item.text}\r\n          leftElement={<IconImage imageName={item.imgName}/>}\r\n          rightElement={item.type === 'night-mode' ? <ModeSwitcher/> : null}\r\n          onClick={() => (item.type === 'night-mode' ? changeMode() : popupOpen(item.type))}/>)}\r\n      </SettingsContent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import { typeOfSettings } from '@reducers/settingsSlice/types';\r\n\r\nexport const getSideItems = (): { text: string, imgName: string, type: typeOfSettings }[] => {\r\n  return [\r\n    {text: 'Settings', imgName: 'settings', type: 'extra-settings'},\r\n    {text: 'Night Mode', imgName: 'night-mode', type: 'night-mode'}\r\n  ];\r\n};","import styled from 'styled-components';\r\nexport const BioContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  box-shadow: 0 5px 6px -3px rgba(34, 60, 80, 0.22);\r\n  padding: 0 ${props => props.theme.other.popupPaddings} 10px;\r\n  position: relative;\r\n  z-index: 1;\r\n  textarea {\r\n    height: 60px;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const LettersCounter = styled.span`\r\n  width: 25px;\r\n  text-align: right;\r\n  font-size: ${props => props.theme.fontSizes.normal};\r\n  color: ${props => props.theme.colors.paragraph};\r\n`;","import React  from 'react';\r\nimport { useAppDispatch, useAppSelector } from '@hooks/useAppSelector';\r\nimport { setBio, updateBio } from '@reducers/userSlice/userReducer';\r\nimport useInput from '@hooks/useInput';\r\n\r\nimport Input from '../../shared/Input/Input';\r\n\r\nimport { LettersCounter, BioContainer } from './BioInput.styles';\r\n\r\nconst MAX_BIO_VALUE = 70;\r\n\r\nconst BioInput = () => {\r\n  const bio = useAppSelector(state => state.user.bio);\r\n  const [value, setValue] = useInput(bio || '');\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onInput = e => {\r\n    if (MAX_BIO_VALUE < e.target.value.length) return;\r\n    setValue(e);\r\n  };\r\n\r\n  const updateServerBio = () => {\r\n    dispatch(setBio(value));\r\n    dispatch(updateBio())\r\n      .unwrap()\r\n      .then(() => window.emitter.emit('tooltip:show', {value: 'Bio updated.'}))\r\n      .catch(e => window.emitter.emit('tooltip:show', {value: e}));\r\n  };\r\n\r\n\r\n  return (\r\n    <BioContainer>\r\n      <Input setValue={onInput} value={value} placeholder=\"Bio\">\r\n        <Input.TextArea onBlur={updateServerBio} onHeightUpdate={() => window.emitter.emit('popup:resize')}/>\r\n      </Input>\r\n      <LettersCounter>{MAX_BIO_VALUE - value.length}</LettersCounter>\r\n    </BioContainer>\r\n  );\r\n};\r\n\r\nexport default BioInput;\r\n","import { useAppSelector } from '@hooks/useAppSelector';\r\n\r\n\r\nconst useBeautifyUserInfo = (): {fullName: string, nickname: string} => {\r\n  const {name, surname, nickname} = useAppSelector(state => state.user);\r\n\r\n  return {fullName: `${name || ''} ${surname || ''}`, nickname: `@${nickname}`};\r\n};\r\n\r\nexport default useBeautifyUserInfo;","import styled from 'styled-components';\r\n\r\n\r\nexport const Main = styled.div`\r\n  display: flex;\r\n  width: 200%;\r\n  transition: ${props => props.theme.other.transitionSpeed};\r\n  &.right {\r\n    transform: translateX(-50%);\r\n  }\r\n`;\r\n\r\n\r\nexport const Items = styled.div`\r\n  background-color: ${props => props.theme.colors.bgColor};\r\n  padding: 5px 0;\r\n`;\r\nexport const LeftSide = styled.div`\r\n  width: 50%;\r\n  &.hide {\r\n    max-height: 0;\r\n  }\r\n`;\r\n\r\nexport const RightSide = styled.div`\r\n  width: 50%;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  background-color: ${props => props.theme.colors.bgColor};\r\n  .input-container {\r\n    border-bottom: none;\r\n  }\r\n`;\r\n\r\nexport const Tip = styled.p`\r\n  color: ${props => props.theme.colors.paragraph};\r\n  padding: 5px ${props => props.theme.other.popupPaddings} 10px;\r\n  font-size: ${props => props.theme.fontSizes.extraSmall};\r\n  background-color: ${props => props.theme.colors.popupBg};\r\n`;","import React from 'react';\r\nimport User from '@helpComponents/User/User';\r\nimport BioInput from '@components/BioInput/BioInput';\r\nimport popupOpen from '@helpers/popupOpen';\r\nimport useBeautifyUserInfo from '@hooks/useBeautifyUserInfo';\r\n\r\nimport { Items } from '../ExtraSettings.styles';\r\nimport ListItem from '../../../shared/ListItem/ListItem';\r\nimport IconImage from '../../../shared/IconImage/IconImage';\r\n\r\nimport { Container, Tip } from './InfoSettings.styles';\r\n\r\n\r\nconst InfoSettings = () => {\r\n  const {fullName, nickname} = useBeautifyUserInfo();\r\n\r\n  return (\r\n    <Container>\r\n      <User textPosition=\"center\" styleAvatar={{width: 100, height: 100, fontSize: 40}}\r\n        styleContainer={{alignItems: 'center', borderBottom: 'none', marginBottom: 10}}\r\n        avatarPos=\"avatar-top\"/>\r\n      <BioInput/>\r\n      <Tip>Any details such as age, occupation. or city. Example: 23 y.o designer from San Francisco</Tip>\r\n      <Items>\r\n        <ListItem\r\n          text=\"Name\"\r\n          leftElement={<IconImage imageName=\"name\"/>}\r\n          onClick={() => popupOpen('name')}\r\n          rightElement={fullName}\r\n        />\r\n        <ListItem\r\n          text=\"Username\"\r\n          leftElement={<IconImage imageName=\"nickname\"/>}\r\n          onClick={() => popupOpen('nickname')}\r\n          rightElement={nickname}\r\n        />\r\n      </Items>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default InfoSettings;\r\n","import styled from 'styled-components';\r\n\r\nexport const PopupItemContainer = styled.div`\r\n  padding: 10px ${props => props.theme.other.popupPaddings};\r\n  background-color: ${props => props.theme.colors.bgColor};\r\n`;","import React, { FC } from 'react';\r\nimport { useAppSelector } from '@hooks/useAppSelector';\r\nimport styled from 'styled-components';\r\n\r\nconst Title = styled.h4`\r\n  display: inline-block;\r\n  font-size: ${props => props.theme.fontSizes.normal};\r\n  font-weight: 600;\r\n  margin-bottom: 20px;\r\n  transform: ${props => props.theme.other.transitionSpeed};\r\n`;\r\n\r\ninterface ISettingsTitleProps {\r\n    title: string\r\n}\r\n\r\nconst SettingsTitle: FC<ISettingsTitleProps> = ({ title }) => {\r\n  const { themeColor } = useAppSelector(state => state.settings);\r\n\r\n  return <Title style={{color: themeColor}}>{title}</Title>;\r\n};\r\n\r\nexport default SettingsTitle;\r\n","import styled from 'styled-components';\r\n\r\nexport const ThemeItemContainer = styled.div<{ beforeColor: string, afterColor: string }>`\r\n  position: relative;\r\n  border-radius: 5px;\r\n  height: 115px;\r\n  width: 80px;\r\n  margin-bottom: 5px;\r\n  cursor: pointer;\r\n\r\n  &:before, &:after {\r\n    position: absolute;\r\n    content: '';\r\n    width: 40px;\r\n    height: 15px;\r\n    border-radius: 2px;\r\n  }\r\n\r\n  &:before {\r\n    background-color: ${props => props.beforeColor};\r\n    top: 15px;\r\n    left: 5px;\r\n  }\r\n\r\n  &:after {\r\n    background-color: ${props => props.afterColor};\r\n    top: 35px;\r\n    right: 5px;\r\n  }\r\n  // radiobutton\r\n  label {\r\n    position: absolute;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    bottom: 15px;\r\n  }\r\n`;\r\n\r\nexport const ThemeNameTooltip = styled.span`\r\n  cursor: pointer;\r\n  text-align: center;\r\n  font-size: ${props => props.theme.fontSizes.normal};\r\n  color: ${props => props.theme.colors.paragraph};\r\n  transform: ${props => props.theme.other.transitionSpeed};\r\n`;","import React, { FC } from 'react';\r\nimport { FlexContainer } from '@styled-components/FlexContainer';\r\n\r\nimport { ThemeItemContainer, ThemeNameTooltip } from './ThemeItem.styles';\r\n\r\ninterface IThemeItemProps {\r\n    bgColor: string,\r\n    partnerMessageColor: string,\r\n    myMessageColor: string,\r\n    name: string,\r\n    nameColor?: string\r\n    onClick: (e: React.MouseEvent<HTMLDivElement>) => void\r\n}\r\n\r\nconst ThemeItem: FC<IThemeItemProps> = ({\r\n  myMessageColor,\r\n  partnerMessageColor,\r\n  bgColor,\r\n  nameColor,\r\n  children,\r\n  onClick,\r\n  name\r\n}) => {\r\n  return (\r\n    <FlexContainer direction=\"column\">\r\n      <ThemeItemContainer\r\n        style={{backgroundColor: bgColor}}\r\n        beforeColor={partnerMessageColor}\r\n        afterColor={myMessageColor}\r\n        onClick={onClick}>\r\n        {children}\r\n      </ThemeItemContainer>\r\n      <ThemeNameTooltip style={{color: nameColor}}>{name}</ThemeNameTooltip>\r\n    </FlexContainer>\r\n  );\r\n};\r\n\r\nexport default ThemeItem;\r\n","import React, { FC } from 'react';\r\nimport styled  from 'styled-components';\r\nimport cn from 'classnames';\r\n\r\nconst RadioLabel = styled.label<{ color: string }>`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 26px;\r\n  height: 26px;\r\n  border-radius: 50%;\r\n  border: 2px solid ${props => props.color};\r\n  &:before {\r\n    position: absolute;\r\n    content: '';\r\n    width: 26px;\r\n    height: 26px;\r\n    left: -2px;\r\n    top: -2px;\r\n    background-color: ${props => props.color};\r\n    border-radius: 50%;\r\n    transform: scale(0);\r\n    transition: ${props => props.theme.other.transitionSpeedSlow};\r\n  }\r\n\r\n  &.active {\r\n    &:before {\r\n      transform: scale(0.6);\r\n    }\r\n  }\r\n  &.filled {\r\n    border: 3px solid ${props => props.color};\r\n    &:before {\r\n      transform: scale(1);\r\n      left: -3px;\r\n      top: -3px;\r\n    }\r\n  }\r\n  &.filled.active {\r\n    &:before {\r\n      transform: scale(0.5);\r\n    }\r\n  }\r\n\r\n\r\n`;\r\n\r\nconst Radio = styled.input`\r\n  width: 0;\r\n  height: 0;\r\n  visibility: hidden;\r\n`;\r\n\r\ninterface IRadioButtonProps {\r\n    checked: boolean,\r\n    value: string,\r\n    color?: string,\r\n    filled?: boolean,\r\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nconst RadioButton: FC<IRadioButtonProps> = ({checked, value, color = '#fff', filled = false, onChange}) => {\r\n  return (\r\n    <RadioLabel color={color} className={cn({active: checked, filled, radiobutton: true})} htmlFor={value}>\r\n      <Radio type=\"radio\" id={value} value={value} checked={checked} onChange={onChange}/>\r\n    </RadioLabel>\r\n  );\r\n};\r\n\r\nexport default RadioButton;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { PopupItemContainer } from '@styled-components/PopupItemContainer';\r\nimport SettingsTitle from '@helpComponents/SettingsTitle/SettingsTitle';\r\nimport ThemeItem from '@components/ThemeItem/ThemeItem';\r\nimport { FlexContainer } from '@styled-components/FlexContainer';\r\nimport RadioButton from '@helpComponents/RadioButton/RadioButton';\r\nimport { useAppDispatch, useAppSelector } from '@hooks/useAppSelector';\r\nimport { setThemeColor, toggleNightMode } from '@reducers/settingsSlice/settingsSlice';\r\nimport noop from '@helpers/noop';\r\n\r\nimport { themeColor } from '../../global.typings';\r\n\r\nconst checkboxColors = [\r\n  '#40a7e3',\r\n  '#45bce7',\r\n  '#52b440',\r\n  '#d46c99',\r\n  '#df8a49',\r\n  '#9978c8',\r\n  '#c55245',\r\n  '#687b98',\r\n  '#dea922'];\r\n\r\nconst ThemeSettings = () => {\r\n  const {isNightMode} = useAppSelector(state => state.settings);\r\n  const [selectedTheme, setSelectedTheme] = useState<'light' | 'dark'>(isNightMode ? 'dark' : 'light');\r\n  const {themeColor} = useAppSelector(state => state.settings);\r\n  const [currentThemeColor, setCurrentThemeColor] = useState<themeColor>(themeColor);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const lightThemeHandle = () => {\r\n    setSelectedTheme('light');\r\n    dispatch(toggleNightMode(false));\r\n  };\r\n\r\n  const darkThemeHandle = () => {\r\n    setSelectedTheme('dark');\r\n    dispatch(toggleNightMode(true));\r\n  };\r\n\r\n  const themeColorHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCurrentThemeColor(e.target.value as themeColor);\r\n    dispatch(setThemeColor(e.target.value as themeColor));\r\n    window.storage.set('theme-color', e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNightMode && selectedTheme !== 'dark') {\r\n      setSelectedTheme('dark');\r\n    } else if (!isNightMode && selectedTheme !== 'light') {\r\n      setSelectedTheme('light');\r\n    }\r\n  }, [isNightMode]);\r\n\r\n\r\n  return (\r\n    <PopupItemContainer>\r\n      <SettingsTitle title=\"Themes\"/>\r\n      <FlexContainer justify=\"space-between\" marginBottom=\"10px\">\r\n        <ThemeItem\r\n          nameColor={selectedTheme === 'light' ? themeColor : undefined}\r\n          name=\"Classic\"\r\n          bgColor=\"#9bd494\"\r\n          myMessageColor=\"#ffffff\"\r\n          partnerMessageColor=\"#ffffff\"\r\n          onClick={lightThemeHandle}>\r\n          <RadioButton value=\"light\" checked={selectedTheme === 'light'} onChange={() => setSelectedTheme('light')}/>\r\n        </ThemeItem>\r\n        <ThemeItem\r\n          nameColor={selectedTheme === 'dark' ? themeColor : undefined}\r\n          name=\"Night\"\r\n          bgColor=\"#485761\"\r\n          myMessageColor=\"#5ca8d4\"\r\n          partnerMessageColor=\"#6b818d\"\r\n          onClick={darkThemeHandle}>\r\n          <RadioButton value=\"dark\" checked={selectedTheme === 'dark'} onChange={() => setSelectedTheme('dark')}/>\r\n        </ThemeItem>\r\n        <ThemeItem\r\n          name=\"Soon...\"\r\n          bgColor=\"#7ec4ea\"\r\n          myMessageColor=\"#d7f0ff\"\r\n          partnerMessageColor=\"#ffffff\"\r\n          onClick={noop}/>\r\n        <ThemeItem\r\n          name=\"Soon...\"\r\n          bgColor=\"#485761\"\r\n          myMessageColor=\"#6b808d\"\r\n          partnerMessageColor=\"#6b808d\"\r\n          onClick={noop}/>\r\n      </FlexContainer>\r\n      <FlexContainer justify=\"space-between\">\r\n        {checkboxColors.map(color =>\r\n          <RadioButton color={color}\r\n            key={color}\r\n            checked={color === currentThemeColor}\r\n            value={color}\r\n            onChange={themeColorHandler}\r\n            filled/>\r\n        )}\r\n      </FlexContainer>\r\n    </PopupItemContainer>\r\n  );\r\n};\r\n\r\nexport default ThemeSettings;\r\n","import { getAppUrl } from '../utils/getAppUrl';\r\n\r\nexport const getBackgroundImagePath = (imageName: string) => {\r\n  return `${getAppUrl()}/images/backgrounds/${imageName}.webp`;\r\n};","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\n\r\nimport { useAppSelector } from '../../hooks/useAppSelector';\r\nimport noop from '../../helpers/noop';\r\n\r\nconst Container = styled.p`\r\n  margin-left: auto;\r\n  font-size: ${props => props.theme.fontSizes.normal};\r\n  font-weight: 400;\r\n  transform: ${props => props.theme.other.transitionSpeed};\r\n  cursor: pointer;\r\n`;\r\n\r\ninterface IThemeTextProps {\r\n    text: string,\r\n    onClick?: (e: React.MouseEvent<HTMLParagraphElement>) => void,\r\n}\r\n\r\nconst ThemedText: FC<IThemeTextProps> = ({text, onClick}) => {\r\n  const {themeColor} = useAppSelector(state => state.settings);\r\n\r\n  return <Container className=\"themed-text\" style={{color: themeColor}} onClick={onClick || noop}>{text}</Container>;\r\n};\r\n\r\nexport default ThemedText;\r\n","import styled from 'styled-components';\r\n\r\nexport const BackgroundImage = styled.img`\r\nbackground-size: cover;\r\n  margin-right: 20px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const ChooseContainer = styled.div`\r\n  .themed-text {\r\n    cursor: pointer;\r\n    &:first-child {\r\n      margin-bottom: 15px;\r\n    }\r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`;","import React from 'react';\r\nimport { PopupItemContainer } from '@styled-components/PopupItemContainer';\r\nimport SettingsTitle from '@helpComponents/SettingsTitle/SettingsTitle';\r\nimport { FlexContainer } from '@styled-components/FlexContainer';\r\nimport { useAppSelector } from '@hooks/useAppSelector';\r\nimport { getBackgroundImagePath } from '@helpers/paths';\r\nimport ThemedText from '@helpComponents/ThemedText/ThemedText';\nimport popupOpen from '@helpers/popupOpen';\n\r\nimport { ChooseContainer, BackgroundImage } from './BackgroundSettings.styles';\r\n\r\nconst BackgroundSettings = () => {\r\n  const { backgroundImage } = useAppSelector(state => state.settings);\r\n  return (\r\n    <PopupItemContainer>\r\n      <SettingsTitle title=\"Chat background\"/>\r\n      <FlexContainer>\r\n        <BackgroundImage width={80} height={80} src={getBackgroundImagePath(backgroundImage)} alt=\"background\"/>\r\n        <ChooseContainer>\r\n          <ThemedText text=\"Choose from gallery\" onClick={() => popupOpen('background')}/>\r\n          <ThemedText text=\"Choose from file\"/>\r\n        </ChooseContainer>\r\n      </FlexContainer>\r\n    </PopupItemContainer>\r\n  );\r\n};\r\n\r\nexport default BackgroundSettings;\r\n","import styled from 'styled-components';\r\n\r\nexport const MessagesSettingsList = styled.ul`\r\n\r\n  li:first-child {\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  p {\r\n    padding-left: 20px;\r\n\r\n  }\r\n  .themed-text {\r\n    margin-left: 0;\r\n  }\r\n`;","import React from 'react';\r\nimport { PopupItemContainer } from '@styled-components/PopupItemContainer';\r\nimport SettingsTitle from '@helpComponents/SettingsTitle/SettingsTitle';\r\nimport RadioButton from '@helpComponents/RadioButton/RadioButton';\r\nimport { useAppDispatch, useAppSelector } from '@hooks/useAppSelector';\r\nimport ThemedText from '@helpComponents/ThemedText/ThemedText';\r\nimport { FlexContainer } from '@styled-components/FlexContainer';\r\nimport { setHotkeyBySend } from '@reducers/settingsSlice/settingsSlice';\r\n\r\nimport { sendHotkey } from '../../global.typings';\r\n\r\nimport { MessagesSettingsList } from './MessagesSettings.styles';\r\n\r\nconst MessagesSettings = () => {\r\n  const {themeColor, sendHotkey} = useAppSelector(state => state.settings);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onChange = (value: sendHotkey) => {\r\n    if (value !== sendHotkey) {\r\n      window.storage.set<sendHotkey>('send-hotkey', value);\r\n      dispatch(setHotkeyBySend(value));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PopupItemContainer>\r\n      <SettingsTitle title=\"Messages\"/>\r\n      <MessagesSettingsList>\r\n        <FlexContainer as=\"li\" alignItems=\"center\">\r\n          <RadioButton\r\n            color={themeColor}\r\n            checked={sendHotkey === 'enter'}\r\n            value={'enter'}\r\n            onChange={() => onChange('enter')}\r\n          />\r\n          <ThemedText text=\"Send with Enter\" onClick={() => onChange('enter')}/>\r\n        </FlexContainer>\r\n        <FlexContainer as=\"li\" alignItems=\"center\">\r\n          <RadioButton\r\n            color={themeColor}\r\n            checked={sendHotkey === 'ctrl-enter'}\r\n            value={'ctrl-enter'}\r\n            onChange={() => onChange('ctrl-enter')}\r\n          />\r\n          <ThemedText text=\"Send with Ctrl+Enter\" onClick={() => onChange('ctrl-enter')}/>\r\n        </FlexContainer>\r\n      </MessagesSettingsList>\r\n    </PopupItemContainer>\r\n  );\r\n};\r\n\r\nexport default MessagesSettings;\r\n","import React from 'react';\r\nimport ThemeSettings from '@components/ThemeSettings/ThemeSettings';\r\nimport BackgroundSettings from '@components/BackgroundSettings/BackgroundSettings';\r\nimport MessagesSettings from '@components/MessagesSettings/MessagesSettings';\r\n\r\nconst ChatSettings = () => {\r\n  return (\r\n    <>\r\n      <ThemeSettings/>\r\n      <BackgroundSettings/>\r\n      <MessagesSettings/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatSettings;\r\n","import { clipboardCopy } from '@helpers/clipboard';\r\n\r\nlet canCopy = true;\r\n\r\nconst copyNickname = (nickname: string) => {\r\n  if (!canCopy) return;\r\n\r\n  canCopy = false;\r\n  setTimeout(() => canCopy = true, 4000);\r\n  clipboardCopy('@' + nickname);\r\n};\r\n\r\nexport default copyNickname;","export const clipboardCopy = (value: string | null, successMessage?: string, errorMessage?: string) => {\r\n  if (!value) return;\r\n\r\n  navigator.clipboard.writeText(value)\r\n    .then(() => window.emitter.emit('tooltip:show', {value: successMessage || 'Link copied to clipboard.'}))\r\n    .catch(() => window.emitter.emit('copy:show', {value: errorMessage || 'Cannot copy.'}));\r\n};\r\n","import { Dispatch, useEffect, useState } from 'react';\r\nimport { typeOfSettings } from '@reducers/settingsSlice/types';\r\n\r\nconst usePopup = (eventName: typeOfSettings, openCb?: () => void, closeCb?: () => void):\r\n  [boolean, Dispatch<boolean>, string] => {\r\n  const [active, setActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.emitter.on(`${eventName}-popup:open`, () => {\r\n      openCb && openCb();\r\n      setActive(true);\r\n    });\r\n    window.emitter.on(`${eventName}-popup:hide`, () => {\r\n      closeCb && closeCb();\r\n      setActive(false);\r\n    });\r\n    return () => {\r\n      window.emitter.un(`${eventName}-popup:open`);\r\n      window.emitter.un(`${eventName}-popup:hide`);\r\n    };\r\n  }, []);\r\n\r\n  return [active, setActive, `${eventName}-popup:hide`];\r\n};\r\n\r\nexport default usePopup;","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport cn from 'classnames';\r\n\r\ninterface IHideByConditionProps {\r\n    hide: boolean\r\n}\r\n\r\nconst Container = styled.div`\r\n  transition: ${props => props.theme.other.transitionSpeed};\r\n  &.hide {\r\n    max-height: 0;\r\n    visibility: hidden;\r\n    opacity: 0;\r\n  }\r\n`;\r\n\r\nconst HideByCondition: FC<IHideByConditionProps> = ({ hide, children }) => {\r\n  return <Container className={cn({hide})}>{children}</Container>;\r\n};\r\n\r\nexport default HideByCondition;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { switchSettings } from '@reducers/settingsSlice/settingsSlice';\r\nimport { useAppDispatch, useAppSelector } from '@hooks/useAppSelector';\r\nimport cn from 'classnames';\r\nimport InfoSettings from '@components/ExtraSettings/InfoSettings/InfoSettings';\r\nimport ChatSettings from '@components/ExtraSettings/ChatSettings/ChatSettings';\r\nimport User from '@helpComponents/User/User';\r\nimport copyNickname from '@components/ExtraSettings/helpers/copyNickname';\r\nimport usePopup from '@hooks/usePopup';\r\nimport HideByCondition from '@helpComponents/HideByCondition/HideByCondition';\r\n\r\nimport Popup from '../../shared/Popup/Popup';\r\nimport ListItem from '../../shared/ListItem/ListItem';\r\nimport IconImage from '../../shared/IconImage/IconImage';\r\n\r\nimport { Main, LeftSide, RightSide, Items } from './ExtraSettings.styles';\r\n\r\ntype itemTypes = 'edit-profile' | 'chat-settings';\r\n\r\nconst titleName: Record<itemTypes, string> = {\r\n  'edit-profile': 'Info',\r\n  'chat-settings': 'Chat settings'\r\n};\r\n\r\n\r\nconst ExtraSettings = () => {\r\n  const dispatch = useAppDispatch();\r\n  const [side, setSide] = useState<'left' | 'right'>('left');\r\n  const [currentType, setCurrentType] = useState<itemTypes | ''>('');\r\n  const contentRef = useRef<HTMLDivElement>(null);\r\n  const mainRef = useRef<HTMLDivElement>(null);\r\n  const nickname = useAppSelector(state => state.user.nickname);\r\n  const [active, , emitCloseName] = usePopup('extra-settings', () => {\r\n    dispatch(switchSettings(false));\r\n  }, () => {\r\n    setSide('left');\r\n    setCurrentType('');\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.emitter.on('extra-settings-item:click', (data: { type: itemTypes } | undefined) => {\r\n      setCurrentType(data!.type);\r\n      setSide('right');\r\n    });\r\n    window.emitter.on('go-back:click', () => {\r\n      setSide('left');\r\n      setCurrentType('');\r\n    });\r\n    window.emitter.on('popup:resize', () => {\r\n      const content = contentRef.current;\r\n      const main = mainRef.current;\r\n      if (!content || !main) return;\r\n      content.style.minHeight = main.offsetHeight + 'px';\r\n      content.style.maxHeight = main.offsetHeight + 'px';\r\n    });\r\n    return () => {\r\n      window.emitter.un('extra-settings-item:click');\r\n      window.emitter.un('item:click');\r\n      window.emitter.un('go-back:click');\r\n\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.emitter.emit('popup:resize');\r\n  }, [side]);\r\n\r\n\r\n  return (\r\n    <Popup ref={contentRef} active={active} emitCloseName={emitCloseName}>\r\n      <Main ref={mainRef} className={cn({right: side === 'right'})}>\r\n        <LeftSide className={cn({hide: side === 'right'})}>\r\n          <Popup.Header title=\"Settings\" closeButton moreButton/>\r\n          <Popup.Content>\r\n            <User styleAvatar={{height: 80, width: 80, fontSize: 25}} styleContainer={{padding: '10px 20px'}}\r\n              avatarPos=\"avatar-left\" onNicknameClick={() => copyNickname(nickname || '')} nickname phone/>\r\n            <Items>\r\n              <ListItem text=\"Edit Profile\" leftElement={<IconImage imageName=\"edit-profile\"/>}\r\n                onClick={() => window.emitter.emit('extra-settings-item:click', {type: 'edit-profile'})}/>\r\n              <ListItem text=\"Chat Settings\" leftElement={<IconImage imageName=\"chat-settings\"/>}\r\n                onClick={() => window.emitter.emit('extra-settings-item:click', {type: 'chat-settings'})}/>\r\n            </Items>\r\n          </Popup.Content>\r\n        </LeftSide>\r\n        <RightSide>\r\n          <Popup.Header title={titleName[currentType]} backEmitName=\"go-back:click\" closeButton backButton/>\r\n          <Popup.Content bordered>\r\n            <HideByCondition hide={currentType !== 'edit-profile'}>\r\n              <InfoSettings/>\r\n            </HideByCondition>\r\n            <HideByCondition hide={currentType !== 'chat-settings'}>\r\n              <ChatSettings/>\r\n            </HideByCondition>\r\n          </Popup.Content>\r\n        </RightSide>\r\n      </Main>\r\n    </Popup>\r\n  );\r\n};\r\n\r\nexport default ExtraSettings;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {rgba} from 'polished';\r\nimport cn from 'classnames';\r\n\r\nconst Container = styled.div`\r\n  position: fixed;\r\n  pointer-events: none;\r\n  top: 50%;\r\n  left: 50%;\r\n  text-align: center;\r\n  transform: translate(-50%, -50%);\r\n  color: #fff;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  font-size: ${props => props.theme.fontSizes.normal};\r\n  background-color: ${props => rgba(props.theme.colors.tooltip, .65)};\r\n  z-index: 10000;\r\n  opacity: 0;\r\n  &.show {\r\n    transition: .5s;\r\n    opacity: 1;\r\n  }\r\n  &.hide {\r\n    transition: 1s;\r\n    opacity: 0;\r\n  }\r\n`;\r\n\r\nconst Tooltip = () => {\r\n  const [value, setValue] = useState('');\r\n  const [hide, setHide] = useState(true);\r\n\r\n  useEffect(() => {\r\n    window.emitter.on<{value: string}>('tooltip:show', data => {\r\n      setValue(data?.value || '');\r\n      setTimeout(() => setHide(true), 2000);\r\n      setTimeout(() => setValue(''), 3500);\r\n    });\r\n    return () => {\r\n      window.emitter.un('tooltip:show');\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (value) {\r\n      setHide(false);\r\n    }\r\n  }, [value]);\r\n\r\n  return <Container className={cn({hide, show: !hide})}>{value}</Container>;\r\n};\r\n\r\nexport default Tooltip;\r\n","import styled from 'styled-components';\r\n\r\nexport const InputContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  & > *:first-child {\r\n    margin-bottom: 20px;\r\n  }\r\n`;","import React from 'react';\r\nimport usePopup from '@hooks/usePopup';\r\nimport { useAppDispatch, useAppSelector } from '@hooks/useAppSelector';\r\nimport useInput from '@hooks/useInput';\r\nimport { setName, updateName } from '@reducers/userSlice/userReducer';\r\nimport { InputContainer } from '@components/NamePopup/NamePopup.styles';\r\n\r\nimport Popup from '../../shared/Popup/Popup';\r\nimport Input from '../../shared/Input/Input';\r\n\r\nconst NamePopup = () => {\r\n  const {name, surname} = useAppSelector(state => state.user);\r\n  const [username, setUsername] = useInput(name || '', /^.{0,12}$/);\r\n  const [userSurname, setUserSurname] = useInput(surname || '', /^.{0,12}$/);\r\n  const [active, , emitCloseName] = usePopup('name');\r\n  const dispatch = useAppDispatch();\r\n\r\n  const saveName = () => {\r\n    if (!username) {\r\n      window.emitter.emit('username:error');\r\n      return;\r\n    }\r\n    dispatch(setName({name: username, surname: userSurname}));\r\n    dispatch(updateName({name: username, surname: userSurname}))\r\n      .unwrap()\r\n      .then(e => e.length && window.emitter.emit('tooltip:show', {value: e}))\r\n      .catch(e => e.length && window.emitter.emit('tooltip:show', {value: e}));\r\n    window.emitter.emit(emitCloseName);\r\n  };\r\n\r\n  return (\r\n    <Popup width={300} top={120} emitCloseName={emitCloseName} active={active} onSubmit={saveName}>\r\n      <Popup.Header title=\"Edit your name\"/>\r\n      <Popup.Content stylized>\r\n        <InputContainer>\r\n          <Input value={username} setValue={setUsername} placeholder=\"First name\">\r\n            <Input.TextField emitErrorName=\"username:error\"/>\r\n          </Input>\r\n          <Input value={userSurname} setValue={setUserSurname} placeholder=\"Last Name\">\r\n            <Input.TextField/>\r\n          </Input>\r\n        </InputContainer>\r\n      </Popup.Content>\r\n      <Popup.Footer submitTitle=\"Save\" cancelTitle=\"Cancel\"/>\r\n    </Popup>\r\n  );\r\n};\r\n\r\nexport default NamePopup;\r\n","import { getAppUrl } from '../../utils/getAppUrl';\r\n\r\nexport type nicknameStatuses =\r\n    'This username is available.'\r\n    | 'Choose your username.'\r\n    | 'This username is too short.'\r\n    | 'This username is already occupied'\r\n    | 'Only a-z, 0-9, and underscores allowed.'\r\n    | 'Cannot connect to server.';\r\n\r\nexport type nicknameClasses = 'error' | 'neutral' | 'success';\r\n\r\nconst checkNickname = async (value: string): Promise<[nicknameStatuses, nicknameClasses]> => {\r\n  if (!value.length) {\r\n    return ['Choose your username.', 'neutral'];\r\n  }\r\n\r\n  if (value.length < 5) {\r\n    return ['This username is too short.', 'error'];\r\n  }\r\n\r\n  if (!/^[a-z_0-9]*$/.test(value)) {\r\n    return ['Only a-z, 0-9, and underscores allowed.', 'error'];\r\n  }\r\n\r\n  try {\r\n    const res = await fetch(`${getAppUrl()}/is-available-nickname`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({nickname: value})\r\n    });\r\n    const isAvailable = await res.json();\r\n\r\n    return isAvailable ? ['This username is available.', 'success'] : ['This username is already occupied', 'error'];\r\n\r\n  } catch (e) {\r\n    return ['Cannot connect to server.', 'error'];\r\n  }\r\n\r\n};\r\n\r\nexport default checkNickname;","import styled from 'styled-components';\r\n\r\nexport const NicknamePopupContainer = styled.div`\r\n  background-color: ${props => props.theme.colors.bgColor};\r\n  padding: 0 ${props => props.theme.other.popupPaddings};\r\n  p {\r\n    font-size: ${props => props.theme.fontSizes.extraSmall};\r\n    padding-bottom: 15px;\r\n    color: ${props => props.theme.colors.heading};\r\n    &.error {\r\n      color: ${props => props.theme.colors.error};\r\n    }\r\n    &.neutral{\r\n      color: ${props => props.theme.colors.paragraph};\r\n    }\r\n    &.success {\r\n      color: ${props => props.theme.colors.success};\r\n    }\r\n  }\r\n`;","import React, { useEffect, useState } from 'react';\r\nimport usePopup from '@hooks/usePopup';\r\nimport useInput from '@hooks/useInput';\r\nimport checkNickname, { nicknameClasses, nicknameStatuses } from '@components/NicknamePopup/helpers';\r\nimport { useAppDispatch, useAppSelector } from '@hooks/useAppSelector';\r\nimport cn from 'classnames';\r\nimport { setNickname, updateNickname } from '@reducers/userSlice/userReducer';\r\n\r\nimport Popup from '../../shared/Popup/Popup';\r\nimport Input from '../../shared/Input/Input';\r\n\r\nimport { NicknamePopupContainer } from './NicknamePopup.styles';\r\n\r\nconst NicknamePopup = () => {\r\n  const [active, , emitCloseName] = usePopup('nickname');\r\n  const {nickname} = useAppSelector(state => state.user);\r\n  const [value, setValue] = useInput(nickname || '', /^.{0,24}$/);\r\n  const [nicknameStatus, setNicknameStatus] = useState<nicknameStatuses | ''>('');\r\n  const [nicknameClass, setNicknameClass] = useState<nicknameClasses | ''>('');\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onSubmit = () => {\r\n    checkNickname(value).then(([, classValue]) => {\r\n      if (classValue !== 'success') {\r\n        window.emitter.emit('nickname-popup:error');\r\n        return;\r\n      }\r\n      dispatch(updateNickname({nickname: value}))\r\n        .unwrap()\r\n        .then(() => dispatch(setNickname(value)))\r\n        .catch(e => window.emitter.emit('tooltip:show', {value: e}));\r\n      window.emitter.emit(emitCloseName);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkNickname(value).then(([status, classValue]) => {\r\n      setNicknameStatus(status);\r\n      setNicknameClass(classValue);\r\n    });\r\n  }, [value]);\r\n\r\n\r\n  return (\r\n    <Popup top={100} active={active} emitCloseName={emitCloseName} onSubmit={onSubmit}>\r\n      <Popup.Header title=\"Username\"/>\r\n      <Popup.Content stylized>\r\n        <Input value={value} setValue={setValue} placeholder=\"@nickname\">\r\n          <Input.TextField emitErrorName=\"nickname-popup:error\"/>\r\n        </Input>\r\n        <NicknamePopupContainer>\r\n          <p className={cn({[nicknameClass]: true})}>{nicknameStatus}</p>\r\n          <p>You can choose a username on Telegram. If you do, other people will be able to find you by this username\r\n            and contact you without knowing your phone number.</p>\r\n          <p>You can use <strong>a-z, 0-9</strong> and <strong>underscores.</strong></p>\r\n          <p>Minimum Length is <strong>5 characters.</strong></p>\r\n        </NicknamePopupContainer>\r\n      </Popup.Content>\r\n      <Popup.Footer submitTitle=\"Save\" cancelTitle=\"Cancel\"/>\r\n    </Popup>\r\n  );\r\n};\r\n\r\nexport default NicknamePopup;\r\n","import styled from 'styled-components';\r\n\r\nexport const BackgroundPreviewContainer = styled.div`\r\n  position: relative;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n  height: 400px;\r\n  .container {\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: auto;\r\n    padding: 5px 20px;\r\n    justify-content: flex-start;\r\n  }\r\n`;","import React, { FC } from 'react';\r\nimport usePopup from '@hooks/usePopup';\r\nimport { BackgroundPreviewContainer } from '@components/BackgroundPreviewPopup/BackgroundPreviewPopup.styles';\r\nimport { getBackgroundImagePath } from '@helpers/paths';\r\nimport { useAppDispatch } from '@hooks/useAppSelector';\r\nimport { setBackgroundImage } from '@reducers/settingsSlice/settingsSlice';\r\n\r\nimport { IMessage } from '../../global.typings';\r\nimport Popup from '../../shared/Popup/Popup';\r\nimport Message from '../../shared/Message/Message';\r\n\r\nconst fakeMessages:Omit<IMessage, 'reaction'>[] = [\r\n  {\r\n    text: 'Ah, you kids today with techno music! you should enjoy the classics, like Hasselhoff!',\r\n    createdDate: Date.now(),\r\n    sender: 'user'\r\n  },\r\n  {\r\n    text: 'I can\\'t even take you seriously right now.',\r\n    createdDate: Date.now(),\r\n    sender: 'partner'\r\n  }\r\n];\r\n\r\ninterface IBackgroundPreviewPopupProps  {\r\n    previewImage: string\r\n}\r\n\r\nconst BackgroundPreviewPopup: FC<IBackgroundPreviewPopupProps> = ({ previewImage }) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const setBackground = () => {\r\n    window.storage.set('background-image', previewImage);\r\n    dispatch(setBackgroundImage(previewImage));\r\n    window.emitter.emit('background-preview-popup:hide');\r\n  };\r\n\r\n  const [active, , emitCloseName] = usePopup('background-preview', () => window.emitter.emit('background-popup:hide'));\r\n  return (\r\n    <Popup top={70} width={370} emitCloseName={emitCloseName} active={active} onSubmit={setBackground}>\r\n      <Popup.Header title=\"Background preview\"/>\r\n      <Popup.Content>\r\n        <BackgroundPreviewContainer style={{backgroundImage: `url(${getBackgroundImagePath(previewImage)})`}}>\r\n          <div className=\"container\">\r\n            <Message\r\n              text={fakeMessages[0].text}\r\n              sender={fakeMessages[0].sender}\r\n              isUnreadTooltip={false}\r\n              date={fakeMessages[0].createdDate}\r\n              isDateTooltip={false}\r\n              isLastMessageByUser\r\n            />\r\n            <Message\r\n              text={fakeMessages[1].text}\r\n              sender={fakeMessages[0].sender}\r\n              isUnreadTooltip={false}\r\n              date={fakeMessages[0].createdDate}\r\n              isDateTooltip={false}\r\n              isLastMessageByUser\r\n            />\r\n          </div>\r\n        </BackgroundPreviewContainer>\r\n      </Popup.Content>\r\n      <Popup.Footer submitTitle=\"Apply\" cancelTitle=\"Cancel\"/>\r\n    </Popup>\r\n  );\r\n};\r\n\r\nexport default BackgroundPreviewPopup;\r\n","import styled from 'styled-components';\r\nimport { Scroll } from '@styled-components/Scroll';\r\n\r\nexport const BackgroundsContainer = styled(Scroll)<{color: string}>`\r\n  display: grid;\r\n  background-color: ${props => props.theme.colors.bgColor};\r\n  padding: 0 10px;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-gap: 10px;\r\n  overflow: auto;\r\n  max-height: min(450px, 75vh);\r\n  span {\r\n    position: relative;\r\n    height: 180px;\r\n    &.active-image:before {\r\n      position: absolute;\r\n      border: 3px solid #fff;\r\n      color: #fff;\r\n      content: '✔';\r\n      text-align: center;\r\n      width: 30px;\r\n      height: 30px;\r\n      bottom: 5px;\r\n      right: 5px;\r\n      border-radius: 50%;\r\n      background-color: ${props => props.color};\r\n    }\r\n  }\r\n \r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    cursor: pointer;\r\n  }\r\n`;","import React, { useState } from 'react';\r\nimport usePopup from '@hooks/usePopup';\r\nimport useFetch from '@hooks/useFetch';\r\nimport { getBackgroundImagePath } from '@helpers/paths';\r\nimport popupOpen from '@helpers/popupOpen';\r\nimport BackgroundPreviewPopup from '@components/BackgroundPreviewPopup/BackgroundPreviewPopup';\r\nimport { useAppSelector } from '@hooks/useAppSelector';\r\nimport cn from 'classnames';\r\n\r\nimport Popup from '../../shared/Popup/Popup';\r\nimport Info from '../../shared/Info/Info';\r\n\r\nimport { BackgroundsContainer } from './BackgroundPopup@common.styles';\r\n\r\n\r\nconst BackgroundPopup: React.FC = () => {\r\n  const [active, , emitCloseName] = usePopup('background');\r\n  const {data: backgroundNames, progress} = useFetch<string[]>('/backgrounds');\r\n  const {backgroundImage, themeColor} = useAppSelector(state => state.settings);\r\n  const [previewImage, setPreviewImage] = useState<string>(backgroundImage);\r\n\r\n  const openImagePopup = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    if ((e.target as HTMLElement).tagName === 'IMG') {\r\n      const currentImage = (e.target as HTMLElement).getAttribute('data-image-name')!;\r\n      setPreviewImage(currentImage);\r\n      popupOpen('background-preview');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Popup emitCloseName={emitCloseName} active={active}>\r\n        <Popup.Header title=\"Choose your new background\"/>\r\n        <Popup.Content bordered>\r\n          <BackgroundsContainer color={themeColor} onClick={openImagePopup}>\r\n            {progress === 'loading' && <Info infoText=\"Searching...\"/>}\r\n            {progress === 'done' && backgroundNames &&\r\n            backgroundNames.map(backgroundName =>\r\n              <span key={backgroundName} className={cn({'active-image': backgroundImage === backgroundName})}>\r\n                <img\r\n                  src={getBackgroundImagePath(backgroundName)} data-image-name={backgroundName}\r\n                  alt={backgroundName}/>\r\n              </span>)}\r\n          </BackgroundsContainer>\r\n        </Popup.Content>\r\n        <Popup.Footer cancelTitle=\"Close\"/>\r\n      </Popup>\r\n      <BackgroundPreviewPopup previewImage={previewImage}/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BackgroundPopup;\r\n","import styled from 'styled-components';\r\n\r\nexport const MainPageStyled = styled.div<{isPhone: boolean}>`\r\n  display: flex;\r\n  width: ${props => (props.isPhone ? '200vw' : 'auto')};\r\n  overflow: hidden;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n`;\r\n","import React, { useEffect } from 'react';\r\nimport ChatsSide from '@components/ChatsSide/ChatsSide';\r\nimport MessagesSide from '@components/MessagesSide/MessagesSide';\r\nimport useSocket from '@hooks/useSocket';\r\nimport Settings from '@components/Settings/Settings';\r\nimport { useAppDispatch, useAppSelector } from '@hooks/useAppSelector';\r\nimport ExtraSettings from '@components/ExtraSettings/ExtraSettings';\r\nimport Tooltip from '@helpComponents/Tooltip/Tooltip';\r\nimport NamePopup from '@components/NamePopup/NamePopup';\r\nimport NicknamePopup from '@components/NicknamePopup/NicknamePopup';\r\nimport BackgroundPopup from '@components/BackgroundPopup/BackgroundPopup@common';\r\nimport { addNewMessage, sendOnlineUser, setOfflineUser } from '@reducers/dialogSlice/dialogSlice';\r\nimport useMatchMedia from '@hooks/useMatchMedia';\r\n\r\nimport { IWeakDialog, phone, timestamp } from '../../global.typings';\r\n\r\nimport { MainPageStyled } from './MainPage.styles';\r\n\r\nconst MainPage: React.FC = () => {\r\n  const {phoneNumber} = useAppSelector(state => state.user);\r\n  const isPhone = useMatchMedia();\r\n\r\n  const initSocket = useSocket('joined');\r\n  const newMessageSocket = useSocket('new message');\r\n  const offlineUserSocket = useSocket('user offline');\r\n  const onlineUserSocket = useSocket('user online');\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    initSocket.emit(phoneNumber);\r\n\r\n    newMessageSocket.on((dialog: IWeakDialog) => {\r\n      dispatch(addNewMessage(dialog));\r\n    });\r\n    offlineUserSocket.on(({userPhone, userLastSeen}: { userPhone: phone, userLastSeen: timestamp }) => {\r\n      dispatch(setOfflineUser({userPhone, userLastSeen}));\r\n    });\r\n    onlineUserSocket.on(({userPhone}: { userPhone: phone }) => {\r\n      dispatch(sendOnlineUser(userPhone));\r\n    });\r\n    return () => {\r\n      initSocket.off();\r\n      newMessageSocket.off();\r\n      offlineUserSocket.off();\r\n      onlineUserSocket.off();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <MainPageStyled isPhone={isPhone}>\r\n      <ChatsSide/>\r\n      <MessagesSide/>\r\n      <Settings/>\r\n      <ExtraSettings/>\r\n      <NamePopup/>\r\n      <NicknamePopup/>\r\n      <BackgroundPopup/>\r\n      <Tooltip/>\r\n    </MainPageStyled>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","var map = {\n\t\"./calls.png\": [\n\t\t1011,\n\t\t11\n\t],\n\t\"./chat-settings.png\": [\n\t\t5840,\n\t\t840\n\t],\n\t\"./contacts.png\": [\n\t\t1854,\n\t\t854\n\t],\n\t\"./edit-profile.png\": [\n\t\t113,\n\t\t113\n\t],\n\t\"./group.png\": [\n\t\t8559,\n\t\t559\n\t],\n\t\"./name.png\": [\n\t\t4525,\n\t\t525\n\t],\n\t\"./nickname.png\": [\n\t\t152,\n\t\t152\n\t],\n\t\"./night-mode.png\": [\n\t\t3251,\n\t\t251\n\t],\n\t\"./report.png\": [\n\t\t7616,\n\t\t616\n\t],\n\t\"./saved-messages.png\": [\n\t\t2442,\n\t\t442\n\t],\n\t\"./settings.png\": [\n\t\t360,\n\t\t360\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 1 | 16);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 2118;\nmodule.exports = webpackAsyncContext;"],"names":["RenderComponent","HamburgerContainerIconStyled","styled","props","theme","colors","hamburgerHover","hamburger","dispatch","useAppDispatch","onClick","switchSettings","phoneMedia","matchMedia","useState","matches","isPhone","setIsPhone","useLayoutEffect","handler","addEventListener","removeEventListener","useDialogs","userPhone","useAppSelector","state","user","phoneNumber","activeDialogPhone","dialog","activeDialog","useInput","searchValue","setSearchValue","useDebounce","debouncedValue","searchDialogs","setSearchDialogs","isLoading","setLoading","useEffect","fetch","BASE_URL","then","response","json","searchUsers","data","setFoundedGlobalUsers","_path","UserAvatarContainer","color","image","style","text","className","timeStamp","date","Date","getDate","now","dateFormat","DialogStyled","chatItemHover","themeColor","MainContent","fontSizes","extraNormal","heading","paragraph","ExtraContent","normal","small","title","partnerPhone","time","avatarImage","avatarName","unreadMessagesCount","isDialogExisted","settings","cn","active","marginRight","formatDate","dialogs","prevRequestRef","useRef","fetchDialog","phone","window","emitter","emit","current","abort","fetchActiveDialog","on","map","userDialog","fullName","lastMessage","avatarText","avatar","lastMessageDate","unreadMessageCount","InfoStyled","searchTitle","extraSmall","infoText","globalSearchResults","globalDialogs","length","userDialogs","memo","renderComponent","LOADING","SEARCH_DIALOGS","USER_DIALOGS","getDialogsType","usePhoneDialogBehavior","useMatchMedia","isOpen","setIsOpen","un","ChatsSideStyled","bgColor","helpingBorders","other","transitionSpeedSlow","ChatsSideHeader","ChatsContainer","Scroll","isPhoneActiveDialogOpen","move","Input","value","setValue","placeholder","timesIcon","bordered","isLastMessageByUser","prevMessage","nextMessage","sender","isShowUnreadTooltip","messagesCount","index","_excluded","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgBackIcon","_ref","svgRef","titleId","xmlns","shapeRendering","textRendering","imageRendering","fillRule","clipRule","viewBox","ref","id","d","ForwardRef","beautifyPhone","slice","PartnerInfoStyled","icons","DAY_TIMESTAMP","isActiveDialogLoaded","isOnline","lastSeen","clearActiveDialog","dateToString","io","msgName","cb","socket","off","MessageInputContainer","blue","scrollToBottomIsNeeded","inputValue","changeInputValue","clearInput","sendHotkey","messageSocket","useSocket","sendMessage","trim","message","createdDate","addMessage","senderPhone","receiverPhone","setTimeout","onKeyUp","e","ctrlKey","onHeightUpdate","maxLines","show","MessageStyled","MessageContent","medium","userMessage","decorate","css","partnerMessage","DateStyled","rgba","dateBackground","timestamp","UnreadTooltipStyled","unreadText","unreadTitle","Message","isDateTooltip","isUnreadTooltip","DateTooltip","UnreadTooltip","partner","LoaderStyled","MessagesStyled","MessagesContent","messagesRef","isScrollRef","forceScroll","isSmooth","scrollTo","top","scrollHeight","behavior","scrollTop","messages","onMessageScroll","useCallback","element","clientHeight","useEventListener","currentMessage","MessageSideStyled","Background","EmptyActiveDialog","backgroundImage","isMove","src","getFullName","nickname","name","surname","UserContainer","textPosition","styleContainer","avatarPos","styleAvatar","onAvatarClick","noop","info","onNameClick","onPhoneClick","onNicknameClick","type","Switcher","switcher","switcherTumbler","transitionSpeed","isNightMode","isNight","storage","get","toggleNightMode","set","imageName","setImage","default","width","height","borderRadius","alt","SettingsContainer","SettingsContent","SettingsHeader","isShowSettings","padding","imgName","item","ListItem","leftElement","rightElement","popupOpen","BioContainer","popupPaddings","LettersCounter","bio","onBlur","setBio","updateBio","unwrap","catch","Main","Items","LeftSide","RightSide","Container","Tip","popupBg","useBeautifyUserInfo","fontSize","alignItems","borderBottom","marginBottom","PopupItemContainer","Title","ThemeItemContainer","beforeColor","afterColor","ThemeNameTooltip","myMessageColor","partnerMessageColor","nameColor","children","FlexContainer","direction","backgroundColor","RadioLabel","Radio","checked","filled","onChange","radiobutton","htmlFor","checkboxColors","selectedTheme","setSelectedTheme","currentThemeColor","setCurrentThemeColor","themeColorHandler","setThemeColor","justify","undefined","getBackgroundImagePath","getAppUrl","BackgroundImage","ChooseContainer","MessagesSettingsList","setHotkeyBySend","as","canCopy","successMessage","errorMessage","navigator","clipboard","writeText","eventName","openCb","closeCb","setActive","hide","titleName","side","setSide","currentType","setCurrentType","contentRef","mainRef","usePopup","emitCloseName","content","main","minHeight","offsetHeight","maxHeight","Popup","right","closeButton","moreButton","copyNickname","backEmitName","backButton","tooltip","setHide","InputContainer","username","setUsername","userSurname","setUserSurname","onSubmit","setName","updateName","stylized","emitErrorName","submitTitle","cancelTitle","checkNickname","test","method","headers","body","JSON","stringify","res","isAvailable","NicknamePopupContainer","error","success","nicknameStatus","setNicknameStatus","nicknameClass","setNicknameClass","status","classValue","updateNickname","setNickname","BackgroundPreviewContainer","fakeMessages","previewImage","setBackgroundImage","BackgroundsContainer","useFetch","backgroundNames","progress","setPreviewImage","tagName","currentImage","getAttribute","backgroundName","MainPageStyled","initSocket","newMessageSocket","offlineUserSocket","onlineUserSocket","addNewMessage","userLastSeen","setOfflineUser","sendOnlineUser","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","Error","code","ids","t","module","exports"],"sourceRoot":""}